{
  "openapi": "3.0.3",
  "info": {
    "title": "Networking API",
    "version": "1.0.0",
    "description": "REST API для управления объектами сетевой инфраструктуры"
  },
  "tags": [
    {
      "name": "versions",
      "description": "Версии API"
    },
    {
      "name": "networks",
      "description": "Сети"
    },
    {
      "name": "ports",
      "description": "Порты"
    },
    {
      "name": "subnets",
      "description": "Подсети"
    },
    {
      "name": "security-groups",
      "description": "Группы безопасности"
    },
    {
      "name": "security-group-rules",
      "description": "Правила группы безопасности"
    },
    {
      "name": "floating-ips",
      "description": "Floating IP-адреса"
    },
    {
      "name": "anycast-ips",
      "description": "Anycast IP-адреса. Только для SDN Sprut"
    },
    {
      "name": "routers",
      "description": "Стандартные маршрутизаторы"
    },
    {
      "name": "dc-routers",
      "description": "Продвинутые маршрутизаторы. Только для SDN Sprut"
    },
    {
      "name": "dc-interfaces",
      "description": "Интерфейсы продвинутых маршрутизаторов. Только для SDN Sprut"
    },
    {
      "name": "dc-bgp",
      "description": "BGP-маршрутизаторы. Только для SDN Sprut"
    },
    {
      "name": "dc-bgp-neighbor",
      "description": "BGP-соседства. Только для SDN Sprut"
    },
    {
      "name": "dc-bgp-static-announce",
      "description": "BGP-анонсы типа Static. Только для SDN Sprut"
    },
    {
      "name": "dc-static-route",
      "description": "Статическая маршрутизация. Только для SDN Sprut"
    },
    {
      "name": "dc-vrrp",
      "description": "VRRP-группы. Только для SDN Sprut"
    },
    {
      "name": "dc-vrrp-interface",
      "description": "Интерфейсы VRRP-групп. Только для SDN Sprut"
    },
    {
      "name": "dc-vrrp-address",
      "description": "Виртуальные IP-адреса VRRP-групп. Только для SDN Sprut"
    },
    {
      "name": "dc-conntrack-helper",
      "description": "Conntrack helpers. Только для SDN Sprut"
    },
    {
      "name": "dc-ip-port-forwarding",
      "description": "Правила DNAT. Только для SDN Sprut"
    },
    {
      "name": "dc-api-options",
      "description": "Параметры API Direct Connect. Только для SDN Sprut"
    },
    {
      "name": "ike-policies",
      "description": "IKE-политики"
    },
    {
      "name": "ipsec-policies",
      "description": "IPsec-политики"
    },
    {
      "name": "vpn-services",
      "description": "VPN-сервисы"
    },
    {
      "name": "endpoint-groups",
      "description": "Endpoint-группы"
    },
    {
      "name": "ipsec-site-connections",
      "description": "VPN-туннели"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "versions"
        ],
        "summary": "Получить перечень поддерживаемых версий API",
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Versions"
                }
              }
            }
          }
        }
      }
    },
    "/v2.0": {
      "get": {
        "tags": [
          "versions"
        ],
        "summary": "Получить информацию о версии 2.0",
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Resources"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          }
        }
      }
    },
    "/v2.0/networks": {
      "get": {
        "summary": "Получить список сетей",
        "description": "Метод возвращает список сетей по заданным фильтрам. В качестве фильтров можно указывать верхнеуровневые атрибуты сетей, например, ``name``. К заданным фильтрам применяется условие «И».",
        "tags": [
          "networks"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/marker"
          },
          {
            "$ref": "#/components/parameters/page_reverse"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort_key"
          },
          {
            "$ref": "#/components/parameters/sort_dir"
          },
          {
            "$ref": "#/components/parameters/tags"
          },
          {
            "$ref": "#/components/parameters/tags-any"
          },
          {
            "$ref": "#/components/parameters/not-tags"
          },
          {
            "$ref": "#/components/parameters/not-tags-any"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Networks"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          }
        }
      },
      "post": {
        "summary": "Создать сеть",
        "description": "Метод создает облачную сеть. Метод поддерживает множественное создание сетей. Для этого укажите в теле запроса список сетей с помощью массива ``networks``.",
        "tags": [
          "networks"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "network": {
                    "$ref": "#/components/schemas/NetworkCreate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "network": {
                      "$ref": "#/components/schemas/Network"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "503": {
            "description": "Сервис временно недоступен"
          }
        }
      }
    },
    "/v2.0/networks/{network_id}": {
      "get": {
        "summary": "Получить информацию о сети",
        "tags": [
          "networks"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/network_id"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "network": {
                      "$ref": "#/components/schemas/Network"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "put": {
        "summary": "Изменить сеть",
        "tags": [
          "networks"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/network_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "network": {
                    "$ref": "#/components/schemas/NetworkUpdate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "network": {
                      "$ref": "#/components/schemas/Network"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "delete": {
        "summary": "Удалить сеть",
        "tags": [
          "networks"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/network_id"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/v2.0/ports": {
      "get": {
        "summary": "Получить список портов",
        "description": "Метод возвращает список портов по заданным фильтрам. В качестве фильтров можно указывать верхнеуровневые атрибуты портов, например, ``name``. К заданным фильтрам применяется условие «И».",
        "tags": [
          "ports"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/marker"
          },
          {
            "$ref": "#/components/parameters/page_reverse"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort_key"
          },
          {
            "$ref": "#/components/parameters/sort_dir"
          },
          {
            "$ref": "#/components/parameters/tags"
          },
          {
            "$ref": "#/components/parameters/tags-any"
          },
          {
            "$ref": "#/components/parameters/not-tags"
          },
          {
            "$ref": "#/components/parameters/not-tags-any"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ports"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          }
        }
      },
      "post": {
        "summary": "Создать порт",
        "description": "Метод создает порт в указанной сети. Метод поддерживает множественное создание портов. Для этого укажите в теле запроса список портов с помощью массива ``ports``.",
        "tags": [
          "ports"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "port": {
                    "$ref": "#/components/schemas/PortCreate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "port": {
                      "$ref": "#/components/schemas/Port"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "503": {
            "description": "Сервис временно недоступен"
          }
        }
      }
    },
    "/v2.0/ports/{port_id}": {
      "get": {
        "summary": "Получить информацию о порте",
        "tags": [
          "ports"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/port_id"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "port": {
                      "$ref": "#/components/schemas/Port"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          }
        }
      },
      "put": {
        "summary": "Изменить порт",
        "tags": [
          "ports"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/port_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "port": {
                    "$ref": "#/components/schemas/PortUpdate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "port": {
                      "$ref": "#/components/schemas/Port"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      },
      "delete": {
        "summary": "Удалить порт",
        "tags": [
          "ports"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/port_id"
          }
        ],
        "responses": {
          "204": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      }
    },
    "/v2.0/floatingips": {
      "get": {
        "summary": "Получить список Floating IP-адресов",
        "description": "Метод возвращает список портов по заданным фильтрам. В качестве фильтров можно указывать верхнеуровневые атрибуты портов, например, ``status``. К заданным фильтрам применяется условие «И».",
        "tags": [
          "floating-ips"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/marker"
          },
          {
            "$ref": "#/components/parameters/page_reverse"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort_key"
          },
          {
            "$ref": "#/components/parameters/sort_dir"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Floating_IPs"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          }
        }
      },
      "post": {
        "summary": "Добавить Floating IP-адрес в проект",
        "description": "",
        "tags": [
          "floating-ips"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "floatingip": {
                    "$ref": "#/components/schemas/Floating_IP_Create"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "floatingip": {
                      "$ref": "#/components/schemas/Floating_IP"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/v2.0/floatingips/{floatingip_id}": {
      "get": {
        "summary": "Получить информацию о Floating IP-адресе",
        "tags": [
          "floating-ips"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/floatingip_id"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "floatingip": {
                      "$ref": "#/components/schemas/Floating_IP"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "put": {
        "summary": "Изменить Floating IP-адрес",
        "tags": [
          "floating-ips"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/floatingip_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "floatingip": {
                    "$ref": "#/components/schemas/Floating_IP_Update"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "floatingip": {
                      "$ref": "#/components/schemas/Floating_IP"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      },
      "delete": {
        "summary": "Удалить Floating IP-адрес",
        "tags": [
          "floating-ips"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/floatingip_id"
          }
        ],
        "responses": {
          "204": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      }
    },
    "/v2.0/routers": {
      "get": {
        "summary": "Получить список стандартных маршрутизаторов",
        "tags": [
          "routers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/marker"
          },
          {
            "$ref": "#/components/parameters/page_reverse"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort_key"
          },
          {
            "$ref": "#/components/parameters/sort_dir"
          },
          {
            "$ref": "#/components/parameters/tags"
          },
          {
            "$ref": "#/components/parameters/tags-any"
          },
          {
            "$ref": "#/components/parameters/not-tags"
          },
          {
            "$ref": "#/components/parameters/not-tags-any"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Routers"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "post": {
        "summary": "Создать стандартный маршрутизатор",
        "tags": [
          "routers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouterCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "router": {
                      "$ref": "#/components/schemas/Router"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      }
    },
    "/v2.0/routers/{router_id}": {
      "get": {
        "summary": "Получить информацию о стандартном маршрутизаторе",
        "tags": [
          "routers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/router_id"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "router": {
                      "$ref": "#/components/schemas/Router"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "put": {
        "summary": "Изменить стандартный маршрутизатор",
        "tags": [
          "routers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/router_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "router": {
                    "$ref": "#/components/schemas/RouterUpdate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "router": {
                      "$ref": "#/components/schemas/Router"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "delete": {
        "summary": "Удалить стандартный маршрутизатор",
        "tags": [
          "routers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/router_id"
          }
        ],
        "responses": {
          "204": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/v2.0/routers/{router_id}/add_router_interface": {
      "put": {
        "summary": "Добавить интерфейс стандартного маршрутизатора",
        "description": "Метод добавляет интерфейс стандартному маршрутизатору. Если в теле запроса указан идентификатор подсети, то будет создан порт для подключения подсети к маршрутизатору.",
        "tags": [
          "routers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/router_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouterInterface"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouterInterfaceResponse"
                },
                "example": [
                  {
                    "id": "915a14a6-867b-4af7-83d1-70efceb146f9",
                    "network_id": "91c013e2-d65a-474e-9177-c3e1799ca726",
                    "port_id": "2dc46bcc-d1f2-4077-b99e-91ee28afaff0",
                    "subnet_id": "a2f1f29d-571b-4533-907f-5803ab96ead1",
                    "subnet_ids": [
                      "a2f1f29d-571b-4533-907f-5803ab96ead1"
                    ],
                    "project_id": "0bd18306d801447bb457a46252d82d13",
                    "tenant_id": "0bd18306d801447bb457a46252d82d13"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/v2.0/routers/{router_id}/remove_router_interface": {
      "put": {
        "summary": "Удалить интерфейс стандартного маршрутизатора",
        "description": "Метод удаляет интерфейс стандартного маршрутизатора и отсоединяет его от подсети. Порт интерфейса, связанный только с этой подсетью, будет удален.",
        "tags": [
          "routers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/router_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouterInterface"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouterInterfaceResponse"
                },
                "example": [
                  {
                    "id": "915a14a6-867b-4af7-83d1-70efceb146f9",
                    "network_id": "91c013e2-d65a-474e-9177-c3e1799ca726",
                    "port_id": "a5b7d209-dc02-4c46-a51f-805eadd3de64",
                    "subnet_id": "4e5fe97c-82bc-432e-87d8-06d7e157dffa",
                    "subnet_ids": [
                      "4e5fe97c-82bc-432e-87d8-06d7e157dffa"
                    ],
                    "project_id": "0bd18306d801447bb457a46252d82d13",
                    "tenant_id": "0bd18306d801447bb457a46252d82d13"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/v2.0/subnets": {
      "get": {
        "summary": "Получить список подсетей",
        "description": "Метод возвращает список подсетей по заданным фильтрам. В качестве фильтров можно указывать верхнеуровневые атрибуты подсетей, например, ``name``. К заданным фильтрам применяется условие «И».",
        "tags": [
          "subnets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/marker"
          },
          {
            "$ref": "#/components/parameters/page_reverse"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort_key"
          },
          {
            "$ref": "#/components/parameters/sort_dir"
          },
          {
            "$ref": "#/components/parameters/tags"
          },
          {
            "$ref": "#/components/parameters/tags-any"
          },
          {
            "$ref": "#/components/parameters/not-tags"
          },
          {
            "$ref": "#/components/parameters/not-tags-any"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subnets"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "post": {
        "summary": "Создать подсеть",
        "description": "Метод создает подсеть в указанной сети. Метод поддерживает множественное создание подсетей. Для этого укажите в теле запроса список подсетей с помощью массива ``subnets``.",
        "tags": [
          "subnets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "subnet": {
                    "$ref": "#/components/schemas/SubnetCreate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "subnet": {
                      "$ref": "#/components/schemas/Subnet"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/v2.0/subnets/{subnet_id}": {
      "get": {
        "summary": "Получить информацию о подсети",
        "tags": [
          "subnets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/subnet_id"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "subnet": {
                      "$ref": "#/components/schemas/Subnet"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "put": {
        "summary": "Изменить подсеть",
        "tags": [
          "subnets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/subnet_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "subnet": {
                    "$ref": "#/components/schemas/SubnetUpdate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "subnet": {
                      "$ref": "#/components/schemas/Subnet"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "delete": {
        "summary": "Удалить подсеть",
        "tags": [
          "subnets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/subnet_id"
          }
        ],
        "responses": {
          "204": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/v2.0/anycastips": {
      "get": {
        "summary": "Получить список Anycast IP-адресов",
        "description": "Получение списка Anycast IP-адресов, добавленных в проект",
        "operationId": "getAnycastips",
        "tags": [
          "anycast-ips"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAnycastipsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          }
        }
      },
      "post": {
        "summary": "Создать Anycast IP-адрес",
        "description": "Добавление Anycast IP-адреса в проект",
        "operationId": "createAnycastip",
        "tags": [
          "anycast-ips"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createAnycastip"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createAnycastipResponse"
                }
              }
            }
          },
          "400": {
            "description": "Неверно указаны параметры запроса"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          }
        }
      }
    },
    "/v2.0/anycastips/{id}": {
      "get": {
        "summary": "Получить информацию об Anycast IP-адресе",
        "description": "Получение информации об Anycast IP-адресе по его идентификатору",
        "operationId": "getAnycastipsId",
        "tags": [
          "anycast-ips"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/anycastip_id"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/getAnycastipsResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          }
        }
      },
      "put": {
        "summary": "Изменить Anycast IP-адрес",
        "description": "Редактирование параметров Anycast IP-адреса",
        "operationId": "putAnycastipsId",
        "tags": [
          "anycast-ips"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/anycastip_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createAnycastip"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/createAnycastipResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          }
        }
      },
      "delete": {
        "summary": "Удалить Anycast IP-адрес",
        "description": "Удаление Anycast IP-адреса по его идентификатору",
        "operationId": "deleteAnycastipsId",
        "tags": [
          "anycast-ips"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/anycastip_id"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          }
        }
      }
    },
    "/v2.0/anycastips/{id}/associate_anycastip": {
      "put": {
        "summary": "Привязать порт к Anycast IP-адресу",
        "description": "Привязка публичного IP-адреса ВМ, балансировщика или интерфейса продвинутого маршрутизатора к Anycast IP-адресу. К одному Anycast IP-адресу можно привязать IP-адреса только одного типа",
        "operationId": "putAssociateAnycastips",
        "tags": [
          "anycast-ips"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/anycastip_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/putAssociateAnycastips"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/createAnycastipResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          }
        }
      }
    },
    "/v2.0/anycastips/{id}/disassociate_anycastip": {
      "put": {
        "summary": "Отвязать порт от Anycast IP-адреса",
        "description": "Отвязка публичного IP-адреса ВМ, балансировщика или интерфейса продвинутого маршрутизатора от Anycast IP-адреса",
        "operationId": "putDisAssociateAnycastips",
        "tags": [
          "anycast-ips"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/anycastip_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/putDisAssociateAnycastips"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/createAnycastipResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          }
        }
      }
    },
    "/v2.0/security-groups": {
      "get": {
        "summary": "Получить список групп безопасности",
        "description": "Метод возвращает список групп безопасности по заданным фильтрам. В качестве фильтров можно указывать верхнеуровневые атрибуты групп безопасности, например, ``name``. К заданным фильтрам применяется условие «И».",
        "tags": [
          "security-groups"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/marker"
          },
          {
            "$ref": "#/components/parameters/page_reverse"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort_key"
          },
          {
            "$ref": "#/components/parameters/sort_dir"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityGroups"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "post": {
        "summary": "Создать группу безопасности",
        "tags": [
          "security-groups"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "security_group": {
                    "$ref": "#/components/schemas/SecurityGroupCreate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "security_group": {
                      "$ref": "#/components/schemas/SecurityGroup"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/v2.0/security-groups/{security_group_id}": {
      "get": {
        "summary": "Получить информацию о группе безопасности",
        "tags": [
          "security-groups"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/security_group_id"
          },
          {
            "$ref": "#/components/parameters/verbose"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "security_group": {
                      "$ref": "#/components/schemas/SecurityGroup"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "put": {
        "summary": "Изменить группу безопасности",
        "tags": [
          "security-groups"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/security_group_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "security_group": {
                    "$ref": "#/components/schemas/SecurityGroupUpdate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "security_group": {
                      "$ref": "#/components/schemas/SecurityGroup"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      },
      "delete": {
        "summary": "Удалить группу безопасности",
        "tags": [
          "security-groups"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/security_group_id"
          }
        ],
        "responses": {
          "204": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/v2.0/security-group-rules": {
      "get": {
        "summary": "Получить список правил групп безопасности",
        "description": "Метод возвращает список правил групп безопасности по заданным фильтрам. В качестве фильтров можно указывать верхнеуровневые атрибуты правил, например, ``direction``. К заданным фильтрам применяется условие «И».",
        "tags": [
          "security-group-rules"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/marker"
          },
          {
            "$ref": "#/components/parameters/page_reverse"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort_key"
          },
          {
            "$ref": "#/components/parameters/sort_dir"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityGroupRules"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "post": {
        "summary": "Создать правило группы безопасности",
        "tags": [
          "security-group-rules"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "security_group_rule": {
                    "$ref": "#/components/schemas/SecurityGroupRuleCreate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "security_group_rule": {
                      "$ref": "#/components/schemas/SecurityGroupRule"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/v2.0/security-group-rules/{security_group_rule_id}": {
      "get": {
        "summary": "Получить информацию о правиле группы безопасности",
        "tags": [
          "security-group-rules"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/security_group_rule_id"
          },
          {
            "$ref": "#/components/parameters/verbose"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "security_group_rule": {
                      "$ref": "#/components/schemas/SecurityGroupRule"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "delete": {
        "summary": "Удалить правило группы безопасности",
        "tags": [
          "security-group-rules"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/security_group_rule_id"
          }
        ],
        "responses": {
          "204": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/direct_connect/dc_routers": {
      "get": {
        "tags": [
          "dc-routers"
        ],
        "summary": "Получить список продвинутых маршрутизаторов",
        "description": "Метод возвращает список продвинутых маршрутизаторов",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_router_many_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "post": {
        "tags": [
          "dc-routers"
        ],
        "summary": "Создать продвинутый маршрутизатор",
        "description": "Метод создает новый продвинутый маршрутизатор",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dc_router_post_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_router_one_resp"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/direct_connect/dc_routers/{id}": {
      "get": {
        "tags": [
          "dc-routers"
        ],
        "summary": "Получить информацию о продвинутом маршрутизаторе",
        "description": "Метод возвращает информацию о продвинутом маршрутизаторе по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_router_id"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_router_one_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "put": {
        "tags": [
          "dc-routers"
        ],
        "summary": "Изменить продвинутый маршрутизатор",
        "description": "Метод изменяет продвинутый маршрутизатор по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_router_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dc_router_put_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_router_one_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "delete": {
        "tags": [
          "dc-routers"
        ],
        "summary": "Удалить продвинутый маршрутизатор",
        "description": "Метод удаляет продвинутый маршрутизатор по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_router_id"
          }
        ],
        "responses": {
          "204": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      }
    },
    "/direct_connect/dc_routers/{id}/telemetry": {
      "get": {
        "tags": [
          "dc-routers"
        ],
        "summary": "Получить статистику продвинутого маршрутизатора",
        "description": "Метод возвращает статистику продвинутого маршрутизатора",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_router_id"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/telemetry_dc_router_response"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      }
    },
    "/direct_connect/dc_interfaces": {
      "get": {
        "tags": [
          "dc-interfaces"
        ],
        "summary": "Получить список интерфейсов продвинутых маршрутизаторов",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "name": "dc_router_id",
            "in": "query",
            "description": "Фильтр по идентификатору продвинутого маршрутизатора",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_interface_many_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "post": {
        "tags": [
          "dc-interfaces"
        ],
        "summary": "Добавить интерфейс продвинутого маршрутизатора",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dc_interface_post_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_interface_one_resp"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/direct_connect/dc_interfaces/{id}": {
      "get": {
        "tags": [
          "dc-interfaces"
        ],
        "summary": "Получить информацию об интерфейсе продвинутого маршрутизатора",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_router_interface_id"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_interface_one_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "put": {
        "tags": [
          "dc-interfaces"
        ],
        "summary": "Изменить интерфейс продвинутого маршрутизатора",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_router_interface_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dc_interface_put_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_interface_one_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "delete": {
        "tags": [
          "dc-interfaces"
        ],
        "summary": "Удалить интерфейс продвинутого маршрутизатора",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_router_interface_id"
          }
        ],
        "responses": {
          "204": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      }
    },
    "/direct_connect/dc_bgps": {
      "get": {
        "tags": [
          "dc-bgp"
        ],
        "summary": "Получить список BGP-маршрутизаторов",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "name": "dc_router_id",
            "in": "query",
            "description": "Фильтр по идентификатору продвинутого маршрутизатора",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_bgp_many_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "post": {
        "tags": [
          "dc-bgp"
        ],
        "summary": "Создать BGP-маршрутизатор",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dc_bgp_post_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_bgp_one_resp"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/direct_connect/dc_bgps/{id}": {
      "get": {
        "tags": [
          "dc-bgp"
        ],
        "summary": "Получить информацию о BGP-маршрутизаторе",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_bgp_id"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_bgp_one_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "put": {
        "tags": [
          "dc-bgp"
        ],
        "summary": "Изменить BGP-маршрутизатор",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_bgp_id"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dc_bgp_put_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_bgp_one_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "delete": {
        "tags": [
          "dc-bgp"
        ],
        "summary": "Удалить BGP-маршрутизатор",
        "description": "Метод удаляет BGP-маршрутизатор по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_bgp_id"
          }
        ],
        "responses": {
          "204": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      }
    },
    "/direct_connect/dc_bgp_neighbors": {
      "get": {
        "tags": [
          "dc-bgp-neighbor"
        ],
        "summary": "Получить список BGP-соседств",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "name": "dc_bgp_id",
            "in": "query",
            "description": "Фильтр по идентификатору BGP-маршрутизатора",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_bgp_neighbor_many_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "post": {
        "tags": [
          "dc-bgp-neighbor"
        ],
        "summary": "Создать BGP-соседство",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dc_bgp_neighbor_post_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_bgp_neighbor_one_resp"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/direct_connect/dc_bgp_neighbors/{id}": {
      "get": {
        "tags": [
          "dc-bgp-neighbor"
        ],
        "summary": "Получить информацию о BGP-соседстве",
        "description": "Метод возвращает информацию о BGP-соседстве по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_bgp_neighbor_id"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_bgp_neighbor_one_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "put": {
        "tags": [
          "dc-bgp-neighbor"
        ],
        "summary": "Изменить BGP-соседство",
        "description": "Метод изменяет BGP-соседство по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_bgp_neighbor_id"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dc_bgp_neighbor_put_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_bgp_neighbor_one_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "delete": {
        "tags": [
          "dc-bgp-neighbor"
        ],
        "summary": "Удалить BGP-соседство",
        "description": "Метод удаляет BGP-соседство по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_bgp_neighbor_id"
          }
        ],
        "responses": {
          "204": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      }
    },
    "/direct_connect/dc_bgp_static_announces": {
      "get": {
        "tags": [
          "dc-bgp-static-announce"
        ],
        "summary": "Получить список BGP-анонсов",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "name": "dc_bgp_id",
            "in": "query",
            "description": "Фильтр по идентификатору BGP-маршрутизатора",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_bgp_static_announce_many_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "post": {
        "tags": [
          "dc-bgp-static-announce"
        ],
        "summary": "Создать BGP-анонс",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dc_bgp_static_announce_post_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_bgp_static_announce_one_resp"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/direct_connect/dc_bgp_static_announces/{id}": {
      "get": {
        "tags": [
          "dc-bgp-static-announce"
        ],
        "summary": "Получить информацию о BGP-анонсе",
        "description": "Метод возвращает информацию о BGP-анонсе по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_bgp_static_announce_id"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_bgp_static_announce_one_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "put": {
        "tags": [
          "dc-bgp-static-announce"
        ],
        "summary": "Изменить BGP-анонс",
        "description": "Метод изменяет BGP-анонс по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_bgp_static_announce_id"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dc_bgp_static_announce_put_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_bgp_static_announce_one_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "delete": {
        "tags": [
          "dc-bgp-static-announce"
        ],
        "summary": "Удалить BGP-анонс",
        "description": "Метод удаляет BGP-анонс по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_bgp_static_announce_id"
          }
        ],
        "responses": {
          "204": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      }
    },
    "/direct_connect/dc_static_routes": {
      "get": {
        "tags": [
          "dc-static-route"
        ],
        "summary": "List Direct Connect Static Routes",
        "description": "List Direct Connect Static Routes",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "name": "dc_router_id",
            "in": "query",
            "description": "Фильтр по идентификатору продвинутого маршрутизатора",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_static_route_many_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "post": {
        "tags": [
          "dc-static-route"
        ],
        "summary": "Add a new Direct Connect Static Route",
        "description": "Add a new Direct Connect Static Route",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dc_static_route_post_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_static_route_one_resp"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/direct_connect/dc_static_routes/{id}": {
      "get": {
        "tags": [
          "dc-static-route"
        ],
        "summary": "Получить информацию о статическом маршруте",
        "description": "Метод возвращает информацию о статическом маршруте по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_static_routes_id"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_static_route_one_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "put": {
        "tags": [
          "dc-static-route"
        ],
        "summary": "Изменить статический маршрут",
        "description": "Метод изменяет статический маршрут по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_static_routes_id"
          }
        ],
        "requestBody": {
          "description": "ОК",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dc_static_route_put_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_static_route_one_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "delete": {
        "tags": [
          "dc-static-route"
        ],
        "summary": "Удалить статический маршрут",
        "description": "Метод удаляет статический маршрут по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_static_routes_id"
          }
        ],
        "responses": {
          "204": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      }
    },
    "/direct_connect/dc_vrrps": {
      "get": {
        "tags": [
          "dc-vrrp"
        ],
        "summary": "Получить список VRRP-групп",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_vrrp_many_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "post": {
        "tags": [
          "dc-vrrp"
        ],
        "summary": "Создать VRRP-группу",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dc_vrrp_post_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_vrrp_one_resp"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/direct_connect/dc_vrrps/{id}": {
      "get": {
        "tags": [
          "dc-vrrp"
        ],
        "summary": "Получить информацию о VRRP-группе",
        "description": "Метод возвращает информацию о VRRP-группе по ее идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_vrrp_id"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_vrrp_one_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "put": {
        "tags": [
          "dc-vrrp"
        ],
        "summary": "Изменить VRRP-группу",
        "description": "Метод изменяет VRRP-группу по ее идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_vrrp_id"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dc_vrrp_put_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_vrrp_one_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "delete": {
        "tags": [
          "dc-vrrp"
        ],
        "summary": "Удалить VRRP-группу",
        "description": "Метод удаляет VRRP-группу по ее идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_vrrp_id"
          }
        ],
        "responses": {
          "204": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      }
    },
    "/direct_connect/dc_vrrp_interfaces": {
      "get": {
        "tags": [
          "dc-vrrp-interface"
        ],
        "summary": "Получить список интерфейсов VRRP-групп",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "name": "dc_vrrp_id",
            "in": "query",
            "description": "Фильтр по идентификатору VRRP-группы",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_vrrp_interface_many_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "post": {
        "tags": [
          "dc-vrrp-interface"
        ],
        "summary": "Создать интерфейс VRRP-группы",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dc_vrrp_interface_post_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_vrrp_interface_one_resp"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/direct_connect/dc_vrrp_interfaces/{id}": {
      "get": {
        "tags": [
          "dc-vrrp-interface"
        ],
        "summary": "Получить информацию об интерфейсе VRRP-группы",
        "description": "Метод возвращает информацию об интерфейсе VRRP-группы по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_vrrp_interfaces_id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_vrrp_interface_one_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "put": {
        "tags": [
          "dc-vrrp-interface"
        ],
        "summary": "Изменить интерфейс VRRP-группы",
        "description": "Метод изменяет интерфейс VRRP-группы по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_vrrp_interfaces_id"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dc_vrrp_interface_put_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_vrrp_interface_one_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "delete": {
        "tags": [
          "dc-vrrp-interface"
        ],
        "summary": "Удалить интерфейс VRRP-группы",
        "description": "Метод удаляет интерфейс VRRP-группы по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_vrrp_interfaces_id"
          }
        ],
        "responses": {
          "204": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      }
    },
    "/direct_connect/dc_vrrp_addresses": {
      "get": {
        "tags": [
          "dc-vrrp-address"
        ],
        "summary": "Получить список виртуальных IP-адресов",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "name": "dc_vrrp_id",
            "in": "query",
            "description": "Фильтр по идентификатору VRRP-группы",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_vrrp_address_many_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "post": {
        "tags": [
          "dc-vrrp-address"
        ],
        "summary": "Создать виртуальный IP-адрес",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dc_vrrp_address_post_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_vrrp_address_one_resp"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/direct_connect/dc_vrrp_addresses/{id}": {
      "get": {
        "tags": [
          "dc-vrrp-address"
        ],
        "summary": "Получить информацию о виртуальном IP-адресе",
        "description": "Метод возвращает информацию о виртуальном IP-адресе по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_vrrp_addresses_id"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_vrrp_address_one_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "put": {
        "tags": [
          "dc-vrrp-address"
        ],
        "summary": "Изменить виртуальный IP-адрес",
        "description": "Метод изменяет виртуальный IP-адрес по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_vrrp_addresses_id"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dc_vrrp_address_put_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_vrrp_address_one_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "delete": {
        "tags": [
          "dc-vrrp-address"
        ],
        "summary": "Удалить виртуальный IP-адрес",
        "description": "Метод удаляет виртуальный IP-адрес по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_vrrp_addresses_id"
          }
        ],
        "responses": {
          "204": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      }
    },
    "/direct_connect/dc_conntrack_helpers": {
      "get": {
        "tags": [
          "dc-conntrack-helper"
        ],
        "summary": "Получить список conntrack helper",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "name": "dc_router_id",
            "in": "query",
            "description": "Фильтр по идентификатору продвинутого маршрутизатора",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_conntrack_helper_many_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "post": {
        "tags": [
          "dc-conntrack-helper"
        ],
        "summary": "Создать conntrack helper",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dc_conntrack_helper_post_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_conntrack_helper_one_resp"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/direct_connect/dc_conntrack_helpers/{id}": {
      "get": {
        "tags": [
          "dc-conntrack-helper"
        ],
        "summary": "Получить информацию о conntrack helper",
        "description": "Метод возвращает информацию о conntrack helper по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_conntrack_helpers_id"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_conntrack_helper_one_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "put": {
        "tags": [
          "dc-conntrack-helper"
        ],
        "summary": "Изменить conntrack helper",
        "description": "Метод изменяет conntrack helper по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_conntrack_helpers_id"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dc_conntrack_helper_put_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_conntrack_helper_one_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "delete": {
        "tags": [
          "dc-conntrack-helper"
        ],
        "summary": "Удалить conntrack helper",
        "description": "Метод удаляет conntrack helper по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_conntrack_helpers_id"
          }
        ],
        "responses": {
          "204": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      }
    },
    "/direct_connect/dc_ip_port_forwardings": {
      "get": {
        "tags": [
          "dc-ip-port-forwarding"
        ],
        "summary": "Получить список правил DNAT",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "name": "dc_router_id",
            "in": "query",
            "description": "Фильтр по идентификатору продвинутого маршрутизатора",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_ip_port_forwarding_many_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "post": {
        "tags": [
          "dc-ip-port-forwarding"
        ],
        "summary": "Создать правило DNAT",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dc_ip_port_forwarding_post_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_ip_port_forwarding_one_resp"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/direct_connect/dc_ip_port_forwardings/{id}": {
      "get": {
        "tags": [
          "dc-ip-port-forwarding"
        ],
        "summary": "Получить информацию о правиле DNAT",
        "description": "Метод возвращает информацию о правиле DNAT по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_ip_port_forwardings_id"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_ip_port_forwarding_one_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "put": {
        "tags": [
          "dc-ip-port-forwarding"
        ],
        "summary": "Изменить правило DNAT",
        "description": "Метод изменяет правило DNAT по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_ip_port_forwardings_id"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dc_ip_port_forwarding_put_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_ip_port_forwarding_one_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "delete": {
        "tags": [
          "dc-ip-port-forwarding"
        ],
        "summary": "Удалить правило DNAT",
        "description": "Метод удаляет правило DNAT по его идентификатору",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          },
          {
            "$ref": "#/components/parameters/dc_ip_port_forwardings_id"
          }
        ],
        "responses": {
          "204": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      }
    },
    "/direct_connect/dc_api_options": {
      "get": {
        "tags": [
          "dc-api-options"
        ],
        "summary": "Получить список параметров API Direct Connect",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN_Sprut"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dc_api_options_resp"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          }
        }
      }
    },
    "/v2.0/vpn/ikepolicies": {
      "get": {
        "summary": "Получить список IKE-политик",
        "description": "Метод возвращает список IKE-политик по заданным фильтрам. В качестве фильтров можно указывать верхнеуровневые атрибуты IKE-политик, например, ``name``. К заданным фильтрам применяется условие «И».",
        "tags": [
          "ike-policies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/marker"
          },
          {
            "$ref": "#/components/parameters/page_reverse"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort_key"
          },
          {
            "$ref": "#/components/parameters/sort_dir"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IkePolicies"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "post": {
        "summary": "Создать IKE-политику",
        "tags": [
          "ike-policies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "ikepolicy": {
                    "$ref": "#/components/schemas/IkePolicyCreate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ikepolicy": {
                      "$ref": "#/components/schemas/IkePolicy"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/v2.0/vpn/ikepolicies/{ikepolicy_id}": {
      "get": {
        "summary": "Получить информацию о IKE-политике",
        "tags": [
          "ike-policies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/ikepolicy_id"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ikepolicy": {
                      "$ref": "#/components/schemas/IkePolicy"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "put": {
        "summary": "Изменить IKE-политику",
        "tags": [
          "ike-policies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/ikepolicy_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "ikepolicy": {
                    "$ref": "#/components/schemas/IkePolicyUpdate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ikepolicy": {
                      "$ref": "#/components/schemas/IkePolicy"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "delete": {
        "summary": "Удалить IKE-политику",
        "tags": [
          "ike-policies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/ikepolicy_id"
          }
        ],
        "responses": {
          "204": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/v2.0/vpn/ipsecpolicies": {
      "get": {
        "summary": "Получить список IPsec-политик",
        "description": "Метод возвращает список IPsec-политик по заданным фильтрам. В качестве фильтров можно указывать верхнеуровневые атрибуты IPsec-политик, например, ``name``. К заданным фильтрам применяется условие «И».",
        "tags": [
          "ipsec-policies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/marker"
          },
          {
            "$ref": "#/components/parameters/page_reverse"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort_key"
          },
          {
            "$ref": "#/components/parameters/sort_dir"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IpsecPolicies"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "post": {
        "summary": "Создать IPsec-политику",
        "tags": [
          "ipsec-policies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "ipsecpolicy": {
                    "$ref": "#/components/schemas/IpsecPolicyCreate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ipsecpolicy": {
                      "$ref": "#/components/schemas/IpsecPolicy"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/v2.0/vpn/ipsecpolicies/{ipsecpolicy_id}": {
      "get": {
        "summary": "Получить информацию о IPsec-политике",
        "tags": [
          "ipsec-policies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/ipsecpolicy_id"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ipsecpolicy": {
                      "$ref": "#/components/schemas/IpsecPolicy"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "put": {
        "summary": "Изменить IPsec-политику",
        "tags": [
          "ipsec-policies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/ipsecpolicy_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "ipsecpolicy": {
                    "$ref": "#/components/schemas/IpsecPolicyUpdate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ipsecpolicy": {
                      "$ref": "#/components/schemas/IpsecPolicy"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "delete": {
        "summary": "Удалить IPsec-политику",
        "tags": [
          "ipsec-policies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/ipsecpolicy_id"
          }
        ],
        "responses": {
          "204": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/v2.0/vpn/vpnservices": {
      "get": {
        "summary": "Получить список VPN-сервисов",
        "description": "Метод возвращает список VPN-сервисов по заданным фильтрам. В качестве фильтров можно указывать верхнеуровневые атрибуты VPN-сервисов, например, ``name``. К заданным фильтрам применяется условие «И».",
        "tags": [
          "vpn-services"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/marker"
          },
          {
            "$ref": "#/components/parameters/page_reverse"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort_key"
          },
          {
            "$ref": "#/components/parameters/sort_dir"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VpnServices"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "post": {
        "summary": "Создать VPN-сервис",
        "tags": [
          "vpn-services"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "vpnservice": {
                    "$ref": "#/components/schemas/VpnServiceCreate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "vpnservice": {
                      "$ref": "#/components/schemas/VpnService"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/v2.0/vpn/vpnservices/{service_id}": {
      "get": {
        "summary": "Получить информацию о VPN-сервисе",
        "tags": [
          "vpn-services"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/service_id"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "vpnservice": {
                      "$ref": "#/components/schemas/VpnService"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "put": {
        "summary": "Изменить VPN-сервис",
        "tags": [
          "vpn-services"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/service_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "vpnservice": {
                    "$ref": "#/components/schemas/VpnServiceUpdate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "vpnservice": {
                      "$ref": "#/components/schemas/VpnService"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "delete": {
        "summary": "Удалить VPN-сервис",
        "tags": [
          "vpn-services"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/service_id"
          }
        ],
        "responses": {
          "204": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/v2.0/vpn/endpoint-groups": {
      "get": {
        "summary": "Получить список endpoint-групп",
        "description": "Метод возвращает список endpoint-групп по заданным фильтрам. В качестве фильтров можно указывать верхнеуровневые атрибуты endpoint-групп, например, ``name``. К заданным фильтрам применяется условие «И».",
        "tags": [
          "endpoint-groups"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/marker"
          },
          {
            "$ref": "#/components/parameters/page_reverse"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort_key"
          },
          {
            "$ref": "#/components/parameters/sort_dir"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointGroups"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "post": {
        "summary": "Создать endpoint-группу",
        "tags": [
          "endpoint-groups"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "endpoint_group": {
                    "$ref": "#/components/schemas/EndpointGroupCreate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "endpoint_group": {
                      "$ref": "#/components/schemas/EndpointGroup"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/v2.0/vpn/endpoint-groups/{endpoint_group_id}": {
      "get": {
        "summary": "Получить информацию о endpoint-группе",
        "tags": [
          "endpoint-groups"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/endpoint_group_id"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "endpoint_group": {
                      "$ref": "#/components/schemas/EndpointGroup"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "put": {
        "summary": "Изменить endpoint-группу",
        "tags": [
          "endpoint-groups"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/endpoint_group_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "endpoint_group": {
                    "$ref": "#/components/schemas/EndpointGroupUpdate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "endpoint_group": {
                      "$ref": "#/components/schemas/EndpointGroup"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "delete": {
        "summary": "Удалить endpoint-группу",
        "tags": [
          "endpoint-groups"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/endpoint_group_id"
          }
        ],
        "responses": {
          "204": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/v2.0/vpn/ipsec-site-connections": {
      "get": {
        "summary": "Получить список VPN-туннелей",
        "description": "Метод возвращает список VPN-туннелей по заданным фильтрам. В качестве фильтров можно указывать верхнеуровневые атрибуты VPN-туннелей, например, ``name``. К заданным фильтрам применяется условие «И».",
        "tags": [
          "ipsec-site-connections"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/marker"
          },
          {
            "$ref": "#/components/parameters/page_reverse"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort_key"
          },
          {
            "$ref": "#/components/parameters/sort_dir"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IpsecSiteConnections"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "post": {
        "summary": "Создать VPN-туннель",
        "tags": [
          "ipsec-site-connections"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "ipsec_site_connection": {
                    "$ref": "#/components/schemas/IpsecSiteConnectionCreate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ipsec_site_connection": {
                      "$ref": "#/components/schemas/IpsecSiteConnection"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    },
    "/v2.0/vpn/ipsec-site-connections/{connection_id}": {
      "get": {
        "summary": "Получить информацию о VPN-туннеле",
        "tags": [
          "ipsec-site-connections"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/connection_id"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ipsec_site_connection": {
                      "$ref": "#/components/schemas/IpsecSiteConnection"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "put": {
        "summary": "Изменить VPN-туннель",
        "tags": [
          "ipsec-site-connections"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/connection_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "ipsec_site_connection": {
                    "$ref": "#/components/schemas/IpsecSiteConnectionUpdate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ipsec_site_connection": {
                      "$ref": "#/components/schemas/IpsecSiteConnection"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          }
        }
      },
      "delete": {
        "summary": "Удалить VPN-туннель",
        "tags": [
          "ipsec-site-connections"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X_SDN"
          },
          {
            "$ref": "#/components/parameters/connection_id"
          }
        ],
        "responses": {
          "204": {
            "description": "ОК"
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "403": {
            "description": "Недостаточно прав"
          },
          "404": {
            "description": "Объект не найден"
          },
          "409": {
            "description": "Конфликт"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "X_SDN": {
        "name": "X-SDN",
        "description": "Заголовок, определяющий SDN, в которую будет отправлен запрос: Neutron или Sprut",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "sprut",
            "neutron"
          ]
        }
      },
      "X_SDN_Sprut": {
        "name": "X-SDN",
        "description": "Заголовок, определяющий SDN, в которую будет отправлен запрос. Этот метод доступен только для SDN Sprut",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "sprut"
          ]
        }
      },
      "network_id": {
        "name": "network_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор сети"
      },
      "port_id": {
        "name": "port_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор порта"
      },
      "floatingip_id": {
        "name": "floatingip_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор Floating IP-адреса"
      },
      "anycastip_id": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор Anycast IP-адреса"
      },
      "router_id": {
        "name": "router_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор стандартного маршрутизатора"
      },
      "dc_router_id": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор продвинутого маршрутизатора"
      },
      "dc_router_interface_id": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор интерфейса продвинутого маршрутизатора"
      },
      "dc_bgp_id": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор BGP-маршрутизатора"
      },
      "dc_bgp_neighbor_id": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор BGP-соседства"
      },
      "dc_bgp_static_announce_id": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор BGP-анонса"
      },
      "dc_static_routes_id": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор статического маршрута"
      },
      "dc_vrrp_id": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор VRRP-группы"
      },
      "dc_vrrp_interfaces_id": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор интерфейса VRRP-группы"
      },
      "dc_vrrp_addresses_id": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор виртуального IP-адреса VRRP-группы"
      },
      "dc_conntrack_helpers_id": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор conntrack helper"
      },
      "dc_ip_port_forwardings_id": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор правила DNAT"
      },
      "ikepolicy_id": {
        "name": "ikepolicy_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор IKE-политики"
      },
      "ipsecpolicy_id": {
        "name": "ipsecpolicy_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор IPsec-политики"
      },
      "connection_id": {
        "name": "connection_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор VPN-туннеля"
      },
      "endpoint_group_id": {
        "name": "endpoint_group_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор endpoint-группы"
      },
      "service_id": {
        "name": "service_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор VPN-сервиса"
      },
      "subnet_id": {
        "name": "subnet_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор подсети"
      },
      "security_group_id": {
        "name": "security_group_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор группы безопасности"
      },
      "security_group_rule_id": {
        "name": "security_group_rule_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Идентификатор правила группы безопасности"
      },
      "tags": {
        "name": "tags",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Фильтр по тегам. Возвращает ВМ, соответствующие всем тегам в списке. Теги в запросе должны быть разделены запятой",
        "required": false
      },
      "tags-any": {
        "name": "tags-any",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Фильтр по тегам. Возвращает ВМ, соответствующие любому тегу в списке. Теги в запросе должны быть разделены запятой",
        "required": false
      },
      "not-tags": {
        "name": "not-tags",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Фильтр по тегам. Возвращает ВМ, которые не соответствуют ни одному тегу в списке. Теги в запросе должны быть разделены запятой",
        "required": false
      },
      "not-tags-any": {
        "name": "not-tags-any",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Фильтр по тегам. Возвращает ВМ, которые не соответствуют любому тегу в списке. Теги в запросе должны быть разделены запятой ",
        "required": false
      },
      "sort_key": {
        "name": "sort_key",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Атрибут, по которому сортируются ВМ в ответе",
        "required": false
      },
      "sort_dir": {
        "name": "sort_dir",
        "in": "query",
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ]
        },
        "description": "Направление сортировки. Возможные значения:\n\n``asc`` — по возрастанию;\n\n``desc`` — по убыванию",
        "required": false
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "schema": {
          "type": "integer"
        },
        "description": "Максимальное количество элементов, возвращаемых в одном ответе. В последующих запросах указывайте в параметре ``marker`` идентификатор последнего элемента из ответа, чтобы получить следующий набор элементов",
        "required": false
      },
      "marker": {
        "name": "marker",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Маркер пагинации для больших наборов данных",
        "required": false
      },
      "page_reverse": {
        "name": "page_reverse",
        "in": "query",
        "schema": {
          "type": "boolean"
        },
        "description": "Направление отображения элементов в ответе"
      },
      "fields": {
        "name": "fields",
        "in": "query",
        "schema": {
          "type": "string",
          "example": "name"
        },
        "description": "Атрибут, возвращаемый в ответе. Можно указать несколько параметров ``fields``, если нужно вернуть несколько атрибутов в ответе, например ``fields=id&fields=name``",
        "required": false
      },
      "verbose": {
        "name": "verbose",
        "in": "query",
        "schema": {
          "type": "boolean"
        },
        "description": "Показать детальную информацию",
        "required": false
      },
      "nameNW": {
        "name": "name",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Фильтр по имени сети",
        "required": false
      },
      "statusNW": {
        "name": "status",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Фильтр по статусу сети",
        "example": "ACTIVE",
        "required": false
      }
    },
    "schemas": {
      "Versions": {
        "properties": {
          "versions": {
            "items": {
              "$ref": "#/components/schemas/Version"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "versions"
        ],
        "description": "Коллекция версий",
        "example": {
          "versions": [
            {
              "id": "v2.0",
              "links": [
                {
                  "href": "http://openstack.example.com/v2.0/",
                  "rel": "self"
                }
              ],
              "status": "CURRENT"
            }
          ]
        }
      },
      "Version": {
        "properties": {
          "id": {
            "type": "string",
            "description": "Имя версии"
          },
          "links": {
            "items": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "type": "array",
            "description": "Ссылки на рассматриваемые ресурсы. Дополнительная информация — `http:developer.openstack.org/api-guide/compute/links_and_references.html`"
          },
          "status": {
            "type": "string",
            "enum": [
              "CURRENT",
              "STABLE",
              "DEPRECATED"
            ],
            "description": "Статус версии"
          }
        },
        "type": "object",
        "required": [
          "id",
          "links",
          "status"
        ],
        "description": "Одиночная запись о версии"
      },
      "Resources": {
        "type": "object",
        "properties": {
          "resources": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array"
          }
        },
        "required": [
          "resources"
        ],
        "description": "Коллекция ресурсов",
        "example": {
          "resources": [
            {
              "links": [
                {
                  "href": "http://openstack.example.com/v2.0/subnets",
                  "rel": "self"
                }
              ],
              "name": "subnet",
              "collection": "subnets"
            },
            {
              "links": [
                {
                  "href": "http://openstack.example.com/v2.0/networks",
                  "rel": "self"
                }
              ],
              "name": "network",
              "collection": "networks"
            },
            {
              "links": [
                {
                  "href": "http://openstack.example.com/v2.0/ports",
                  "rel": "self"
                }
              ],
              "name": "port",
              "collection": "ports"
            }
          ]
        }
      },
      "Resource": {
        "properties": {
          "name": {
            "type": "string",
            "description": "Название ресурса"
          },
          "collection": {
            "type": "string",
            "description": "Название коллекции ресурсов"
          },
          "links": {
            "items": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "type": "array",
            "description": "Ссылки на рассматриваемые ресурсы. Дополнительная информация — `http:developer.openstack.org/api-guide/compute/links_and_references.html`"
          }
        }
      },
      "Networks": {
        "type": "object",
        "properties": {
          "networks": {
            "type": "array",
            "description": "Список сетей",
            "items": {
              "$ref": "#/components/schemas/Network"
            }
          }
        }
      },
      "Network": {
        "type": "object",
        "required": [
          "status",
          "name",
          "admin_state_up",
          "tenant_id",
          "project_id",
          "mtu",
          "subnets",
          "id",
          "sdn",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя сети"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор сети"
          },
          "status": {
            "type": "string",
            "description": "Статус сети"
          },
          "description": {
            "type": "string",
            "description": "Описание сети"
          },
          "tags": {
            "type": "array",
            "description": "Список тегов",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "example": "2015-08-27T09:49:58-05:00",
            "description": "Дата и время создания ресурса. Формат: ``CCYY-MM-DDThh:mm:ss±hh:mm``. Значение ``±hh:mm`` указывает на часовой пояс (смещение от UTC)"
          },
          "updated_at": {
            "type": "string",
            "example": "2015-08-27T09:49:58-05:00",
            "description": "Дата и время обновления ресурса. Формат: ``CCYY-MM-DDThh:mm:ss±hh:mm``. Значение ``±hh:mm`` указывает на часовой пояс (смещение от UTC)"
          },
          "sdn": {
            "type": "string",
            "enum": [
              "neutron",
              "sprut"
            ],
            "description": "SDN, в котором находится ресурс"
          },
          "router:external": {
            "type": "boolean",
            "description": "Параметр определяет, может ли эта сеть предоставлять Floating IP-адреса через маршрутизатор"
          },
          "admin_state_up": {
            "type": "boolean",
            "description": "Административный статус ресурса. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          },
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "mtu": {
            "type": "integer",
            "description": "MTU сети"
          },
          "subnets": {
            "type": "array",
            "description": "Список подсетей",
            "items": {
              "type": "string"
            }
          },
          "port_security_enabled": {
            "type": "boolean",
            "description": "Состояние безопасности порта. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          },
          "shared": {
            "type": "boolean",
            "description": "Параметр определяет, является ли сеть общей для нескольких проектов"
          },
          "enable_shadow_port": {
            "type": "boolean",
            "description": "Параметр определяет, подключен ли Shadow port к сети. Опция позволяет размещать кластеры Kubernetes в приватных сетях без доступа в интернет. Опция доступна, если Shadow port добавлен в проект и для сети отключен доступ в интернет"
          },
          "private_dns_domain": {
            "type": "string",
            "description": "Зона для приватного DNS"
          },
          "dns_domain": {
            "type": "string",
            "description": "DNS"
          }
        }
      },
      "NetworkCreate": {
        "type": "object",
        "required": [
          "admin_state_up",
          "tenant_id",
          "project_id",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя сети"
          },
          "description": {
            "type": "string",
            "description": "Описание сети"
          },
          "tags": {
            "type": "array",
            "description": "Список тегов",
            "items": {
              "type": "string"
            }
          },
          "admin_state_up": {
            "type": "boolean",
            "description": "Административный статус ресурса. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          },
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "port_security_enabled": {
            "type": "boolean",
            "description": "Состояние безопасности порта. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          },
          "shared": {
            "type": "boolean",
            "description": "Параметр определяет, является ли сеть общей для нескольких проектов"
          },
          "enable_shadow_port": {
            "type": "boolean",
            "description": "Параметр определяет, подключен ли Shadow port к сети. Опция позволяет размещать кластеры Kubernetes в приватных сетях без доступа в интернет. Опция доступна, если Shadow port добавлен в проект и для сети отключен доступ в интернет"
          },
          "private_dns_domain": {
            "type": "string",
            "description": "Зона для приватного DNS. Значение обязательно должно заканчиваться точкой"
          }
        }
      },
      "NetworkUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя сети"
          },
          "description": {
            "type": "string",
            "description": "Описание сети"
          },
          "tags": {
            "type": "array",
            "description": "Список тегов",
            "items": {
              "type": "string"
            }
          },
          "admin_state_up": {
            "type": "boolean",
            "description": "Административный статус ресурса. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          },
          "port_security_enabled": {
            "type": "boolean",
            "description": "Состояние безопасности порта. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          },
          "shared": {
            "type": "boolean",
            "description": "Параметр определяет, является ли сеть общей для нескольких проектов"
          },
          "enable_shadow_port": {
            "type": "boolean",
            "description": "Параметр определяет, подключен ли Shadow port к сети. Опция позволяет размещать кластеры Kubernetes в приватных сетях без доступа в интернет. Опция доступна, если Shadow port добавлен в проект и для сети отключен доступ в интернет"
          },
          "private_dns_domain": {
            "type": "string",
            "description": "Зона для приватного DNS. Значение обязательно должно заканчиваться точкой"
          }
        }
      },
      "Ports": {
        "type": "object",
        "properties": {
          "ports": {
            "type": "array",
            "description": "Список портов",
            "items": {
              "$ref": "#/components/schemas/Port"
            }
          }
        }
      },
      "Port": {
        "type": "object",
        "required": [
          "status",
          "name",
          "admin_state_up",
          "network_id",
          "created_at",
          "updated_at",
          "id",
          "tenant_id",
          "project_id",
          "sdn"
        ],
        "properties": {
          "status": {
            "type": "string",
            "description": "Статус порта",
            "enum": [
              "ACTIVE",
              "DOWN",
              "BUILD",
              "ERROR"
            ]
          },
          "name": {
            "type": "string",
            "description": "Имя порта"
          },
          "description": {
            "type": "string",
            "description": "Описание порта"
          },
          "tags": {
            "type": "array",
            "description": "Список тегов",
            "items": {
              "type": "string"
            }
          },
          "allowed_address_pairs": {
            "type": "array",
            "description": "Набор разрешенных пар адресов. Пара адресов содержит IP-адрес и MAC-адрес",
            "items": {
              "type": "object",
              "properties": {
                "ip_address": {
                  "type": "string",
                  "description": "IP-адрес разрешенной пары адресов"
                },
                "mac_address": {
                  "type": "string",
                  "description": "MAC-адрес разрешенной пары адресов"
                }
              }
            }
          },
          "admin_state_up": {
            "type": "boolean",
            "description": "Административный статус ресурса. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          },
          "network_id": {
            "type": "string",
            "description": "Идентификатор сети"
          },
          "extra_dhcp_opts": {
            "type": "array",
            "description": "Набор дополнительных пар параметров DHCP",
            "items": {
              "type": "object",
              "properties": {
                "opt_name": {
                  "type": "string",
                  "description": "Имя дополнительного параметра DHCP"
                },
                "opt_value": {
                  "type": "string",
                  "description": "Значение дополнительного параметра DHCP"
                }
              }
            }
          },
          "created_at": {
            "type": "string",
            "example": "2015-08-27T09:49:58-05:00",
            "description": "Дата и время создания ресурса. Формат: ``CCYY-MM-DDThh:mm:ss±hh:mm``. Значение ``±hh:mm`` указывает на часовой пояс (смещение от UTC)"
          },
          "updated_at": {
            "type": "string",
            "example": "2015-08-27T09:49:58-05:00",
            "description": "Дата и время обновления ресурса. Формат: ``CCYY-MM-DDThh:mm:ss±hh:mm``. Значение ``±hh:mm`` указывает на часовой пояс (смещение от UTC)"
          },
          "sdn": {
            "type": "string",
            "enum": [
              "neutron",
              "sprut"
            ],
            "description": "SDN, в котором находится ресурс"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор порта"
          },
          "device_owner": {
            "type": "string",
            "description": "Идентификатор объекта, использующего порт, например, DHCP-агента"
          },
          "device_id": {
            "type": "string",
            "description": "Идентификатор устройства, использующего порт, например, виртуальной машины"
          },
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "port_security_enabled": {
            "type": "boolean",
            "description": "Состояние безопасности порта. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          },
          "fixed_ips": {
            "type": "array",
            "description": "Список IP-адресов",
            "items": {
              "type": "object",
              "properties": {
                "subnet_id": {
                  "type": "string",
                  "description": "Идентификатор подсети"
                },
                "ip_address": {
                  "type": "string",
                  "description": "IP-адрес"
                }
              }
            }
          },
          "security_groups": {
            "type": "array",
            "description": "Один или несколько идентификаторов групп безопасности",
            "items": {
              "type": "string"
            }
          },
          "mac_address": {
            "type": "string",
            "description": "MAC-адрес"
          }
        }
      },
      "PortCreate": {
        "type": "object",
        "required": [
          "name",
          "admin_state_up",
          "network_id",
          "tenant_id",
          "project_id"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя порта"
          },
          "description": {
            "type": "string",
            "description": "Описание порта"
          },
          "tags": {
            "type": "array",
            "description": "Список тегов",
            "items": {
              "type": "string"
            }
          },
          "admin_state_up": {
            "type": "boolean",
            "description": "Административный статус ресурса. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          },
          "network_id": {
            "type": "string",
            "description": "Идентификатор сети, в которой нужно создать порт"
          },
          "allowed_address_pairs": {
            "type": "array",
            "description": "Набор разрешенных пар адресов. Пара адресов содержит IP-адрес и MAC-адрес",
            "items": {
              "type": "object",
              "properties": {
                "ip_address": {
                  "type": "string",
                  "description": "IP-адрес разрешенной пары адресов"
                },
                "mac_address": {
                  "type": "string",
                  "description": "MAC-адрес разрешенной пары адресов"
                }
              }
            }
          },
          "extra_dhcp_opts": {
            "type": "array",
            "description": "Набор дополнительных пар параметров DHCP",
            "items": {
              "type": "object",
              "properties": {
                "opt_name": {
                  "type": "string",
                  "description": "Имя дополнительного параметра DHCP"
                },
                "opt_value": {
                  "type": "string",
                  "description": "Значение дополнительного параметра DHCP"
                }
              }
            }
          },
          "fixed_ips": {
            "type": "array",
            "description": "Список IP-адресов",
            "items": {
              "type": "object",
              "properties": {
                "subnet_id": {
                  "type": "string",
                  "description": "Идентификатор подсети. Если указана подсеть и не указан IP-адрес, то порту будет выделен доступный IP-адрес из этой подсети"
                },
                "ip_address": {
                  "type": "string",
                  "description": "IP-адрес"
                }
              }
            }
          },
          "device_owner": {
            "type": "string",
            "description": "Идентификатор объекта, использующего порт, например, DHCP-агента"
          },
          "device_id": {
            "type": "string",
            "description": "Идентификатор устройства, использующего порт, например, виртуальной машины"
          },
          "security_groups": {
            "type": "array",
            "description": "Один или несколько идентификаторов групп безопасности",
            "items": {
              "type": "string"
            }
          },
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          }
        }
      },
      "PortUpdate": {
        "type": "object",
        "required": [
          "name",
          "admin_state_up"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя порта"
          },
          "description": {
            "type": "string",
            "description": "Описание порта"
          },
          "tags": {
            "type": "array",
            "description": "Список тегов",
            "items": {
              "type": "string"
            }
          },
          "admin_state_up": {
            "type": "boolean",
            "description": "Административный статус ресурса. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          },
          "allowed_address_pairs": {
            "type": "array",
            "description": "Набор разрешенных пар адресов. Пара адресов содержит IP-адрес и MAC-адрес",
            "items": {
              "type": "object",
              "properties": {
                "ip_address": {
                  "type": "string",
                  "description": "IP-адрес разрешенной пары адресов"
                },
                "mac_address": {
                  "type": "string",
                  "description": "MAC-адрес разрешенной пары адресов"
                }
              }
            }
          },
          "extra_dhcp_opts": {
            "type": "array",
            "description": "Набор дополнительных пар параметров DHCP",
            "items": {
              "type": "object",
              "properties": {
                "opt_name": {
                  "type": "string",
                  "description": "Имя дополнительного параметра DHCP"
                },
                "opt_value": {
                  "type": "string",
                  "description": "Значение дополнительного параметра DHCP"
                }
              }
            }
          },
          "fixed_ips": {
            "type": "array",
            "description": "Список IP-адресов",
            "items": {
              "type": "object",
              "properties": {
                "subnet_id": {
                  "type": "string",
                  "description": "Идентификатор подсети. Если указана подсеть и не указан IP-адрес, то порту будет выделен доступный IP-адрес из этой подсети"
                },
                "ip_address": {
                  "type": "string",
                  "description": "IP-адрес"
                }
              }
            }
          },
          "device_owner": {
            "type": "string",
            "description": "Идентификатор объекта, использующего порт, например, DHCP-агента"
          },
          "device_id": {
            "type": "string",
            "description": "Идентификатор устройства, использующего порт, например, виртуальной машины"
          },
          "security_groups": {
            "type": "array",
            "description": "Один или несколько идентификаторов групп безопасности",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Floating_IPs": {
        "type": "object",
        "required": [
          "floatingips"
        ],
        "properties": {
          "floatingips": {
            "type": "array",
            "description": "Список Floating IP-адресов",
            "items": {
              "$ref": "#/components/schemas/Floating_IP"
            }
          }
        }
      },
      "Floating_IP": {
        "type": "object",
        "required": [
          "id",
          "router_id",
          "status",
          "tenant_id",
          "project_id",
          "created_at",
          "updated_at",
          "sdn",
          "description",
          "floating_network_id",
          "port_id",
          "fixed_ip_address",
          "floating_ip_address"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор Floating IP-адреса"
          },
          "router_id": {
            "type": "string",
            "description": "Идентификатор маршрутизатора"
          },
          "status": {
            "type": "string",
            "description": "Статус Floating IP-адреса",
            "enum": [
              "ACTIVE",
              "DOWN",
              "ERROR"
            ]
          },
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "created_at": {
            "type": "string",
            "example": "2015-08-27T09:49:58-05:00",
            "description": "Дата и время создания ресурса. Формат: ``CCYY-MM-DDThh:mm:ss±hh:mm``. Значение ``±hh:mm`` указывает на часовой пояс (смещение от UTC)"
          },
          "updated_at": {
            "type": "string",
            "example": "2015-08-27T09:49:58-05:00",
            "description": "Дата и время обновления ресурса. Формат: ``CCYY-MM-DDThh:mm:ss±hh:mm``. Значение ``±hh:mm`` указывает на часовой пояс (смещение от UTC)"
          },
          "sdn": {
            "type": "string",
            "enum": [
              "neutron",
              "sprut"
            ],
            "description": "SDN, в котором находится ресурс"
          },
          "description": {
            "type": "string",
            "description": "Описание Floating IP-адреса"
          },
          "tags": {
            "type": "array",
            "description": "Список тегов",
            "items": {
              "type": "string"
            }
          },
          "floating_network_id": {
            "type": "string",
            "description": "Идентификатор сети"
          },
          "port_id": {
            "type": "string",
            "description": "Идентификатор порта"
          },
          "fixed_ip_address": {
            "type": "string",
            "description": "Фиксированный IP-адрес, к которому привязан Floating IP-адрес"
          },
          "floating_ip_address": {
            "type": "string",
            "description": "Floating IP-адрес"
          }
        }
      },
      "Floating_IP_Create": {
        "type": "object",
        "required": [
          "tenant_id",
          "project_id",
          "floating_network_id"
        ],
        "properties": {
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "floating_network_id": {
            "type": "string",
            "description": "Идентификатор сети"
          },
          "port_id": {
            "type": "string",
            "description": "Идентификатор порта. Укажите его, если нужно связать Floating IP-адрес с фиксированным IP-адресом"
          },
          "fixed_ip_address": {
            "type": "string",
            "description": "Фиксированный IP-адрес, к которому привязан Floating IP-адрес. Если ``fixed_ip_address`` не указан, а в параметре ``port_id`` указан порт с несколькими IP-адресами, то будет выбран первый IP-адрес"
          },
          "subnet_id": {
            "type": "string",
            "description": "Идентификатор подсети"
          },
          "description": {
            "type": "string",
            "description": "Описание Floating IP-адреса"
          },
          "tags": {
            "type": "array",
            "description": "Список тегов",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Floating_IP_Update": {
        "type": "object",
        "required": [
          "port_id"
        ],
        "properties": {
          "port_id": {
            "type": "string",
            "nullable": true,
            "description": "Идентификатор порта. Укажите его, если нужно связать Floating IP-адрес с фиксированным IP-адресом. Чтобы отвязать Floating IP-адрес, укажите в этом параметре ``null``"
          },
          "fixed_ip_address": {
            "type": "string",
            "description": "Фиксированный IP-адрес, к которому привязан Floating IP-адрес. Если ``fixed_ip_address`` не указан, а в параметре ``port_id`` указан порт с несколькими IP-адресами, то будет выбран первый IP-адрес"
          },
          "description": {
            "type": "string",
            "description": "Описание Floating IP-адреса"
          },
          "tags": {
            "type": "array",
            "description": "Список тегов",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Routers": {
        "type": "object",
        "required": [
          "routers"
        ],
        "properties": {
          "routers": {
            "type": "array",
            "description": "Список стандартных маршрутизаторов",
            "items": {
              "$ref": "#/components/schemas/Router"
            }
          }
        }
      },
      "Router": {
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "project_id",
          "name",
          "description",
          "admin_state_up",
          "created_at",
          "updated_at",
          "sdn"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор стандартного маршрутизатора"
          },
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "name": {
            "type": "string",
            "description": "Имя стандартного маршрутизатора"
          },
          "description": {
            "type": "string",
            "description": "Описание стандартного маршрутизатора"
          },
          "tags": {
            "type": "array",
            "description": "Список тегов",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "example": "2015-08-27T09:49:58-05:00",
            "description": "Дата и время создания ресурса. Формат: ``CCYY-MM-DDThh:mm:ss±hh:mm``. Значение ``±hh:mm`` указывает на часовой пояс (смещение от UTC)"
          },
          "updated_at": {
            "type": "string",
            "example": "2015-08-27T09:49:58-05:00",
            "description": "Дата и время обновления ресурса. Формат: ``CCYY-MM-DDThh:mm:ss±hh:mm``. Значение ``±hh:mm`` указывает на часовой пояс (смещение от UTC)"
          },
          "sdn": {
            "type": "string",
            "enum": [
              "neutron",
              "sprut"
            ],
            "description": "SDN, в котором находится ресурс"
          },
          "admin_state_up": {
            "type": "boolean",
            "description": "Административный статус ресурса. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          },
          "status": {
            "type": "string",
            "description": "Статус стандартного маршрутизатора"
          },
          "external_gateway_info": {
            "type": "object",
            "nullable": true,
            "description": "Информация о внешнем шлюзе маршрутизатора",
            "properties": {
              "network_id": {
                "type": "string",
                "description": "Идентификатор сети, к которой подключен шлюз маршрутизатора"
              },
              "enable_snat": {
                "type": "boolean",
                "default": true,
                "description": "Параметр определяет, включен ли SNAT. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
              },
              "external_fixed_ips": {
                "type": "array",
                "description": "",
                "items": {
                  "properties": {
                    "subnet_id": {
                      "type": "string",
                      "description": "Идентификатор подсети"
                    },
                    "ip_address": {
                      "type": "string",
                      "description": "IP-адрес"
                    }
                  }
                }
              }
            }
          },
          "routes": {
            "type": "array",
            "description": "Конфигурация дополнительных маршрутов для маршрутизатора L3",
            "items": {
              "properties": {
                "destination": {
                  "type": "string",
                  "description": "Целевой CIDR"
                },
                "nexthop": {
                  "type": "string",
                  "description": "IP-адрес назначения. Должен принадлежать одной из подсетей, к которым подключены интерфейсы маршрутизатора"
                }
              }
            }
          }
        }
      },
      "RouterCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя стандартного маршрутизатора"
          },
          "description": {
            "type": "string",
            "description": "Описание стандартного маршрутизатора"
          },
          "tags": {
            "type": "array",
            "description": "Список тегов",
            "items": {
              "type": "string"
            }
          },
          "admin_state_up": {
            "type": "boolean",
            "description": "Административный статус ресурса. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          },
          "external_gateway_info": {
            "type": "object",
            "nullable": true,
            "required": [
              "network_id"
            ],
            "description": "Информация о внешнем шлюзе маршрутизатора",
            "properties": {
              "network_id": {
                "type": "string",
                "description": "Идентификатор сети"
              },
              "enable_snat": {
                "type": "boolean",
                "default": true,
                "description": "Параметр определяет, включить ли SNAT. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
              },
              "external_fixed_ips": {
                "type": "array",
                "description": "",
                "items": {
                  "properties": {
                    "subnet_id": {
                      "type": "string",
                      "description": "Идентификатор подсети"
                    },
                    "ip_address": {
                      "type": "string",
                      "description": "IP-адрес"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "RouterUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя стандартного маршрутизатора"
          },
          "description": {
            "type": "string",
            "description": "Описание стандартного маршрутизатора"
          },
          "tags": {
            "type": "array",
            "description": "Список тегов",
            "items": {
              "type": "string"
            }
          },
          "admin_state_up": {
            "type": "boolean",
            "description": "Административный статус ресурса. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          },
          "external_gateway_info": {
            "type": "object",
            "nullable": true,
            "description": "Информация о внешнем шлюзе маршрутизатора",
            "properties": {
              "network_id": {
                "type": "string",
                "description": "Идентификатор сети"
              },
              "enable_snat": {
                "type": "boolean",
                "default": true,
                "description": "Параметр определяет, включить ли SNAT. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
              },
              "external_fixed_ips": {
                "type": "array",
                "description": "",
                "items": {
                  "properties": {
                    "subnet_id": {
                      "type": "string",
                      "description": "Идентификатор подсети"
                    },
                    "ip_address": {
                      "type": "string",
                      "description": "IP-адрес"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "RouterInterface": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "subnet_id": {
                "type": "string",
                "description": "Идентификатор подсети. Должен быть заполнен только один из параметров: ``subnet_id`` или ``port_id``"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "port_id": {
                "type": "string",
                "description": "Идентификатор порта. Должен быть заполнен только один из параметров: ``subnet_id`` или ``port_id``"
              }
            }
          }
        ]
      },
      "RouterInterfaceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор стандартного маршрутизатора"
          },
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "network_id": {
            "type": "string",
            "description": "Идентификатор сети"
          },
          "port_id": {
            "type": "string",
            "description": "Идентификатор порта"
          },
          "subnet_id": {
            "type": "string",
            "description": "Идентификатор подсети"
          },
          "subnet_ids": {
            "type": "array",
            "description": "Список из одного идентификатора подсети",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Subnets": {
        "type": "object",
        "required": [
          "subnets"
        ],
        "properties": {
          "subnets": {
            "type": "array",
            "description": "Список подсетей",
            "items": {
              "$ref": "#/components/schemas/Subnet"
            }
          }
        }
      },
      "Subnet": {
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "project_id",
          "name",
          "description",
          "enable_dhcp",
          "network_id",
          "dns_nameservers",
          "allocation_pools",
          "host_routes",
          "ip_version",
          "gateway_ip",
          "cidr",
          "created_at",
          "updated_at",
          "sdn"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор подсети"
          },
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "name": {
            "type": "string",
            "description": "Имя подсети"
          },
          "description": {
            "type": "string",
            "description": "Описание подсети"
          },
          "tags": {
            "type": "array",
            "description": "Список тегов",
            "items": {
              "type": "string"
            }
          },
          "enable_dhcp": {
            "type": "boolean",
            "description": "Параметр определяет, включен ли DHCP для подсети. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          },
          "network_id": {
            "type": "string",
            "description": "Идентификатор сети"
          },
          "dns_nameservers": {
            "type": "array",
            "description": "Список имен DNS-серверов",
            "items": {
              "type": "string"
            }
          },
          "allocation_pools": {
            "type": "array",
            "description": "Пул IP-адресов",
            "items": {
              "properties": {
                "start": {
                  "type": "string"
                },
                "end": {
                  "type": "string"
                }
              }
            }
          },
          "host_routes": {
            "type": "array",
            "description": "Дополнительные маршруты подсети",
            "items": {
              "properties": {
                "destination": {
                  "type": "string",
                  "description": "Целевой CIDR"
                },
                "nexthop": {
                  "type": "string",
                  "description": "IP-адрес назначения"
                }
              }
            }
          },
          "ip_version": {
            "type": "integer",
            "enum": [
              4,
              6
            ],
            "description": "Версия IP-адреса"
          },
          "gateway_ip": {
            "type": "string",
            "nullable": true,
            "description": "IP-адрес шлюза. Значение ``null`` означает, что с подсетью не связан ни один шлюз"
          },
          "cidr": {
            "type": "string",
            "description": "CIDR подсети"
          },
          "created_at": {
            "type": "string",
            "example": "2015-08-27T09:49:58-05:00",
            "description": "Дата и время создания ресурса. Формат: ``CCYY-MM-DDThh:mm:ss±hh:mm``. Значение ``±hh:mm`` указывает на часовой пояс (смещение от UTC)"
          },
          "updated_at": {
            "type": "string",
            "example": "2015-08-27T09:49:58-05:00",
            "description": "Дата и время обновления ресурса. Формат: ``CCYY-MM-DDThh:mm:ss±hh:mm``. Значение ``±hh:mm`` указывает на часовой пояс (смещение от UTC)"
          },
          "sdn": {
            "type": "string",
            "enum": [
              "neutron",
              "sprut"
            ],
            "description": "SDN, в котором находится ресурс"
          }
        }
      },
      "SubnetCreate": {
        "type": "object",
        "required": [
          "network_id",
          "ip_version",
          "cidr"
        ],
        "properties": {
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "name": {
            "type": "string",
            "description": "Имя подсети"
          },
          "description": {
            "type": "string",
            "description": "Описание подсети"
          },
          "tags": {
            "type": "array",
            "description": "Список тегов",
            "items": {
              "type": "string"
            }
          },
          "enable_dhcp": {
            "type": "boolean",
            "description": "Параметр определяет, включен ли DHCP для подсети. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          },
          "network_id": {
            "type": "string",
            "description": "Идентификатор сети"
          },
          "dns_nameservers": {
            "type": "array",
            "description": "Список имен DNS-серверов",
            "items": {
              "type": "string"
            }
          },
          "allocation_pools": {
            "type": "array",
            "description": "Пул IP-адресов",
            "items": {
              "properties": {
                "start": {
                  "type": "string"
                },
                "end": {
                  "type": "string"
                }
              }
            }
          },
          "host_routes": {
            "type": "array",
            "description": "Дополнительные маршруты подсети",
            "items": {
              "properties": {
                "destination": {
                  "type": "string",
                  "description": "Целевой CIDR"
                },
                "nexthop": {
                  "type": "string",
                  "description": "IP-адрес назначения"
                }
              }
            }
          },
          "ip_version": {
            "type": "integer",
            "enum": [
              4,
              6
            ],
            "description": "Версия IP-адреса"
          },
          "gateway_ip": {
            "type": "string",
            "nullable": true,
            "description": "IP-адрес шлюза. Значение ``null`` означает, что с подсетью не связан ни один шлюз"
          },
          "cidr": {
            "type": "string",
            "description": "CIDR подсети"
          }
        }
      },
      "SubnetUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя подсети"
          },
          "description": {
            "type": "string",
            "description": "Описание подсети"
          },
          "tags": {
            "type": "array",
            "description": "Список тегов",
            "items": {
              "type": "string"
            }
          },
          "enable_dhcp": {
            "type": "boolean",
            "description": "Параметр определяет, включен ли DHCP для подсети. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          },
          "dns_nameservers": {
            "type": "array",
            "description": "Список имен DNS-серверов",
            "items": {
              "type": "string"
            }
          },
          "allocation_pools": {
            "type": "array",
            "description": "Пул IP-адресов",
            "items": {
              "properties": {
                "start": {
                  "type": "string"
                },
                "end": {
                  "type": "string"
                }
              }
            }
          },
          "host_routes": {
            "type": "array",
            "description": "Дополнительные маршруты подсети",
            "items": {
              "properties": {
                "destination": {
                  "type": "string",
                  "description": "Целевой CIDR"
                },
                "nexthop": {
                  "type": "string",
                  "description": "IP-адрес назначения"
                }
              }
            }
          },
          "gateway_ip": {
            "type": "string",
            "nullable": true,
            "description": "IP-адрес шлюза. Значение ``null`` означает, что с подсетью не связан ни один шлюз"
          }
        }
      },
      "Anycast_IP": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Название Anycast IP-адреса",
            "type": "string"
          },
          "description": {
            "description": "Описание Anycast IP-адреса",
            "type": "string"
          },
          "tenant_id": {
            "description": "Идентификатор тенанта",
            "type": "string"
          },
          "project_id": {
            "description": "Идентификатор проекта",
            "type": "string"
          },
          "network_id": {
            "description": "Уникальный идентификатор внешней сети (UUID), из которой будет выбран IP-адрес для Anycast",
            "type": "string"
          },
          "associations": {
            "description": "Список связанных IP-адресов. Может быть пустым. К одному Anycast IP-адресу можно привязать IP-адреса только одного типа",
            "type": "object",
            "properties": {
              "id": {
                "description": "Уникальный идентификатор IP-адреса (UUID), который нужно привязать к Anycast IP-адресу",
                "type": "string"
              },
              "type": {
                "description": "Тип IP-адреса: `port` — публичный IP-адрес ВМ, `dc_interface` — IP-адрес интерфейса продвинутого маршрутизатора, `octavia` — IP-адрес балансировщика",
                "type": "string"
              }
            }
          },
          "healthcheck": {
            "description": "Проверка работоспособности",
            "type": "object",
            "properties": {
              "type": {
                "description": "Тип порта: `TCP` или `ICMP`",
                "type": "string"
              },
              "port": {
                "description": "Порт для проверки работоспособности. Допустимо значение `NULL`. Для указанных в проверке ВМ добавьте правило безопасности, разрешающее входящий трафик на указанный порт с IP-адреса `169.254.169.100/32`",
                "type": "integer"
              },
              "property": {
                "description": "Опции для определенных типов проверок. Сейчас опции не реализованы",
                "type": "object"
              }
            }
          }
        }
      },
      "getAnycastipsResponse": {
        "type": "object",
        "properties": {
          "anycastip": {
            "$ref": "#/components/schemas/Anycast_IP"
          }
        },
        "example": {
          "anycastips": {
            "associations": [],
            "name": "test1234567",
            "network_id": "ec8c610e-aaaa-bbbb-cccc-d2c541e88164",
            "tenant_id": "aaa1111c2c174a0bb128cd33cf0b7878",
            "created_at": "2025-01-24T09:11:16",
            "updated_at": "2025-01-28T14:26:05",
            "subnet_id": "4675a124-dddd-eeee-ffff-82dc7d53c820",
            "healthcheck": {},
            "project_id": "bbb2222c2c174a0bb128cd33cf0b7878",
            "ip_address": "212.233.94.233",
            "id": "5a3fd388-gggg-hhhh-iiii-98557b07cc7d",
            "description": ""
          }
        }
      },
      "createAnycastip": {
        "type": "object",
        "properties": {
          "anycastip": {
            "$ref": "#/components/schemas/Anycast_IP"
          }
        },
        "example": {
          "name": "Example Anicast IP",
          "anycastip": {
            "network_id": "ec8c610e-aaaa-bbbb-cccc-d2c541e88164",
            "associations": {
              "id": "d9735126-dddd-eeee-ffff-eb28cf64c809",
              "type": "port"
            },
            "healthcheck": {
              "type": "TCP,",
              "port": "80,",
              "property": {}
            }
          }
        }
      },
      "createAnycastipResponse": {
        "type": "object",
        "properties": {
          "anycastip": {
            "$ref": "#/components/schemas/Anycast_IP"
          }
        },
        "example": {
          "anycastip": {
            "associations": [
              {
                "type": "port",
                "id": "d9735126-dddd-eeee-ffff-eb28cf64c809"
              }
            ],
            "name": "Example Anicast IP",
            "network_id": "ec8c610e-aaaa-bbbb-cccc-d2c541e88164",
            "tenant_id": "aaa1111c2c174a0bb128cd33cf0b7878",
            "created_at": "2025-01-30T09:04:24",
            "updated_at": "2025-01-30T09:04:24",
            "subnet_id": "4675a124-xxxx-yyyy-zzzz-82dc7d53c820"
          },
          "healthcheck": {
            "property": {},
            "type": "TCP",
            "port": 80
          },
          "project_id": "bbb222c2c174a0bb128cd33cf0b7878",
          "ip_address": "212.233.95.21",
          "id": "b3a72e00-pppp-rrrr-ssss-20422135cc64",
          "description": ""
        }
      },
      "putAssociateAnycastips": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Уникальный идентификатор IP-адреса (UUID), который нужно привязать к Anycast IP-адресу",
            "type": "string"
          },
          "type": {
            "description": "Тип IP-адреса: `port` — публичный IP-адрес ВМ, `dc_interface` — IP-адрес интерфейса продвинутого маршрутизатора, `octavia` — IP-адрес балансировщика",
            "type": "string"
          }
        },
        "example": {
          "id": "d9735126-dddd-eeee-ffff-eb28cf64c809",
          "type": "port"
        }
      },
      "putDisAssociateAnycastips": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Уникальный идентификатор IP-адреса (UUID), который нужно привязать к Anycast IP-адресу",
            "type": "string"
          }
        },
        "example": {
          "id": "d9735126-dddd-eeee-ffff-eb28cf64c809"
        }
      },
      "SecurityGroups": {
        "type": "object",
        "required": [
          "security_groups"
        ],
        "properties": {
          "security_groups": {
            "type": "array",
            "description": "Список подсетей",
            "items": {
              "$ref": "#/components/schemas/SecurityGroup"
            }
          }
        }
      },
      "SecurityGroup": {
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "project_id",
          "name",
          "description",
          "security_group_rules"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор группы безопасности"
          },
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "name": {
            "type": "string",
            "description": "Имя группы безопасности"
          },
          "description": {
            "type": "string",
            "description": "Описание группы безопасности"
          },
          "security_group_rules": {
            "type": "array",
            "description": "Список правил группы безопасности",
            "items": {
              "$ref": "#/components/schemas/SecurityGroupRule"
            }
          }
        }
      },
      "SecurityGroupCreate": {
        "type": "object",
        "required": [
          "tenant_id",
          "project_id",
          "name",
          "description"
        ],
        "properties": {
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "name": {
            "type": "string",
            "description": "Имя группы безопасности"
          },
          "description": {
            "type": "string",
            "description": "Описание группы безопасности"
          }
        }
      },
      "SecurityGroupUpdate": {
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя группы безопасности"
          },
          "description": {
            "type": "string",
            "description": "Описание группы безопасности"
          }
        }
      },
      "SecurityGroupRules": {
        "type": "object",
        "required": [
          "security_group_rules"
        ],
        "properties": {
          "security_group_rules": {
            "type": "array",
            "description": "Список правил",
            "items": {
              "$ref": "#/components/schemas/SecurityGroupRule"
            }
          }
        }
      },
      "SecurityGroupRule": {
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "project_id",
          "security_group_id",
          "direction"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор правила группы безопасности"
          },
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "security_group_id": {
            "type": "string",
            "description": "Идентификатор группы безопасности"
          },
          "remote_group_id": {
            "type": "string",
            "nullable": true,
            "description": "Идентификатор группы, ВМ которой могут быть источником трафика. Указывается, если не указан ``remote_ip_prefix``"
          },
          "remote_ip_prefix": {
            "type": "string",
            "nullable": true,
            "description": "Адрес, с которого могут осуществляться подключения (в формате CIDR). Указывается, если не указан ``remote_group_id``"
          },
          "direction": {
            "type": "string",
            "enum": [
              "ingress",
              "egress"
            ],
            "description": "Направление трафика, для которого действует правило. Возможные значение:\n\n``ingress`` — правила для входящего трафика,\n\n``egress`` — правила для исходящего трафика"
          },
          "protocol": {
            "type": "string",
            "nullable": true,
            "enum": [
              "icmp",
              "tcp",
              "udp",
              null
            ],
            "description": "Сетевой протокол, используемый в правиле"
          },
          "ethertype": {
            "type": "string",
            "enum": [
              "IPv4",
              "IPv6"
            ],
            "description": "Версия протокола"
          },
          "port_range_max": {
            "type": "integer",
            "nullable": true,
            "description": "Верхняя граница диапазона портов"
          },
          "port_range_min": {
            "type": "integer",
            "nullable": true,
            "description": "Нижня граница диапазона портов"
          }
        }
      },
      "SecurityGroupRuleCreate": {
        "type": "object",
        "required": [
          "security_group_id",
          "direction"
        ],
        "properties": {
          "security_group_id": {
            "type": "string",
            "description": "Идентификатор группы безопасности"
          },
          "direction": {
            "type": "string",
            "enum": [
              "ingress",
              "egress"
            ],
            "description": "Направление трафика, для которого действует правило. Возможные значение:\n\n``ingress`` — правила для входящего трафика,\n\n``egress`` — правила для исходящего трафика"
          },
          "protocol": {
            "type": "string",
            "nullable": true,
            "enum": [
              "icmp",
              "tcp",
              "udp",
              null
            ],
            "description": "Сетевой протокол, используемый в правиле"
          },
          "ethertype": {
            "type": "string",
            "enum": [
              "IPv4",
              "IPv6"
            ],
            "description": "Версия протокола"
          },
          "port_range_max": {
            "type": "integer",
            "nullable": true,
            "description": "Верхняя граница диапазона портов"
          },
          "port_range_min": {
            "type": "integer",
            "nullable": true,
            "description": "Нижня граница диапазона портов"
          },
          "remote_group_id": {
            "type": "string",
            "nullable": true,
            "description": "Идентификатор группы, ВМ которой могут быть источником трафика. Указывается, если не указан ``remote_ip_prefix``"
          },
          "remote_ip_prefix": {
            "type": "string",
            "nullable": true,
            "description": "Адрес, с которого могут осуществляться подключения (в формате CIDR). Указывается, если не указан ``remote_group_id``"
          }
        }
      },
      "dc_api_options_resp": {
        "type": "object",
        "properties": {
          "dc_api_options": {
            "type": "object",
            "properties": {
              "availability_zones": {
                "type": "array",
                "description": "Список зон доступности",
                "items": {
                  "type": "string",
                  "example": "AZ1"
                }
              },
              "flavors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/dc_flavor"
                }
              }
            },
            "required": [
              "availability_zones",
              "flavors"
            ]
          }
        },
        "required": [
          "dc_api_options"
        ]
      },
      "dc_flavor": {
        "type": "string",
        "enum": [
          "basic",
          "standard",
          "advanced"
        ],
        "example": "standard"
      },
      "dc_router_rw_props": {
        "type": "object",
        "properties": {
          "enable_snat": {
            "type": "boolean",
            "example": true,
            "description": "Параметр определяет, включен ли SNAT. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          }
        }
      },
      "dc_router_post_props": {
        "type": "object",
        "properties": {
          "availability_zone": {
            "type": "string",
            "example": "AZ1",
            "description": "Зона доступности"
          },
          "flavor": {
            "$ref": "#/components/schemas/dc_flavor"
          }
        }
      },
      "dc_router_get_props": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dc_router_post_props"
          },
          {
            "$ref": "#/components/schemas/dc_router_rw_props"
          }
        ],
        "required": [
          "availability_zone",
          "flavor"
        ]
      },
      "dc_router_post_body": {
        "type": "object",
        "properties": {
          "dc_router": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_router_post_props"
              },
              {
                "$ref": "#/components/schemas/dc_router_rw_props"
              },
              {
                "$ref": "#/components/schemas/dc_api_nd_props"
              }
            ]
          }
        },
        "required": [
          "dc_router"
        ]
      },
      "dc_router_put_body": {
        "type": "object",
        "properties": {
          "dc_router": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_router_rw_props"
              },
              {
                "$ref": "#/components/schemas/dc_api_nd_props"
              }
            ]
          }
        }
      },
      "dc_router_full": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/dc_router_get_props"
          },
          {
            "$ref": "#/components/schemas/neutron_api_get_props"
          }
        ]
      },
      "dc_router_one_resp": {
        "type": "object",
        "properties": {
          "dc_router": {
            "$ref": "#/components/schemas/dc_router_full"
          }
        }
      },
      "dc_router_many_resp": {
        "type": "object",
        "properties": {
          "dc_routers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dc_router_full"
            }
          }
        },
        "required": [
          "dc_routers"
        ]
      },
      "dc_interface_post_props": {
        "type": "object",
        "properties": {
          "dc_router_id": {
            "type": "string",
            "format": "uuid",
            "description": "Идентификатор маршрутизатора"
          },
          "network_id": {
            "type": "string",
            "format": "uuid",
            "description": "Идентификатор сети"
          },
          "subnet_id": {
            "type": "string",
            "format": "uuid",
            "description": "Идентификатор подсети"
          },
          "ip_address": {
            "type": "string",
            "example": "192.168.1.2",
            "description": "IP-адрес"
          }
        },
        "required": [
          "dc_router_id"
        ]
      },
      "dc_interface_ro_props": {
        "type": "object",
        "properties": {
          "port_id": {
            "type": "string",
            "format": "uuid",
            "description": "Идентификатор порта"
          },
          "sdn": {
            "type": "string",
            "example": "sprut",
            "description": "SDN"
          },
          "ip_address": {
            "type": "string",
            "example": "192.168.1.2",
            "description": "IP-адрес"
          },
          "ip_netmask": {
            "type": "integer",
            "example": 24,
            "description": "Префикс IP-адреса"
          },
          "mac_address": {
            "type": "string",
            "example": "01:23:45:67:89:0a",
            "description": "MAC-адрес"
          },
          "mtu": {
            "type": "integer",
            "example": 1500,
            "description": "MTU"
          },
          "is_external": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "dc_interface_rw_props": {
        "type": "object",
        "properties": {
          "bgp_announce_enabled": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "dc_interface_post_body": {
        "type": "object",
        "properties": {
          "dc_interface": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_interface_post_props"
              },
              {
                "$ref": "#/components/schemas/dc_interface_rw_props"
              },
              {
                "$ref": "#/components/schemas/dc_api_nd_props"
              }
            ]
          }
        }
      },
      "dc_interface_put_body": {
        "type": "object",
        "properties": {
          "dc_interface": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_interface_rw_props"
              },
              {
                "$ref": "#/components/schemas/dc_api_nd_props"
              }
            ]
          }
        }
      },
      "dc_interface_full": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/dc_interface_post_props"
          },
          {
            "$ref": "#/components/schemas/dc_interface_ro_props"
          },
          {
            "$ref": "#/components/schemas/dc_interface_rw_props"
          },
          {
            "$ref": "#/components/schemas/neutron_api_get_props"
          }
        ]
      },
      "dc_interface_one_resp": {
        "type": "object",
        "properties": {
          "dc_interface": {
            "$ref": "#/components/schemas/dc_interface_full"
          }
        }
      },
      "dc_interface_many_resp": {
        "type": "object",
        "properties": {
          "dc_interfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dc_interface_full"
            }
          }
        }
      },
      "dc_bgp_post_props": {
        "type": "object",
        "properties": {
          "dc_router_id": {
            "type": "string",
            "format": "uuid",
            "description": "Идентификатор продвинутого маршрутизатора"
          },
          "bgp_router_id": {
            "type": "string",
            "example": "192.168.1.2",
            "description": "Идентификатор BGP-маршрутизатора. Рекомендации для указываемого значения:\n\n- используйте самый высокий IP-адрес на интерфейсе обратной связи;\n- используйте самый высокий IP-адрес на физическом интерфейсе"
          },
          "asn": {
            "type": "integer",
            "example": 64512,
            "description": "Номер автономной сети (ASN) из диапазона 64512–65534"
          }
        },
        "required": [
          "dc_router_id"
        ]
      },
      "dc_bgp_rw_props": {
        "type": "object",
        "properties": {
          "ecmp_enabled": {
            "type": "boolean",
            "example": false,
            "description": "Параметр определяет, включена ли опция ECMP. Если включена, маршрутизатор создаст несколько маршрутов до одного места назначения. При передаче данных, если один из маршрутов недоступен, автоматически будет выбран другой. Это позволяет повысить пропускную способность и отказоустойчивость.\n\nВозможные значения:\n\n``true`` — опция включена,\n\n``false`` — опция выключена"
          },
          "enabled": {
            "type": "boolean",
            "example": true,
            "description": "Параметр определяет, включен ли BGP-маршрутизатор.\n\nВозможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          },
          "graceful_restart": {
            "type": "boolean",
            "example": false,
            "description": "Параметр определяет, включена ли опция Graceful restart. Если включена, после перезапуска узла BGP-маршрутизатор сохранит свое состояние и продолжит передавать данные.\n\nВозможные значения:\n\n``true`` — опция включена,\n\n``false`` — опция выключена"
          },
          "long_lived_graceful_restart": {
            "type": "boolean",
            "example": false,
            "description": "Параметр определяет, включена ли опция Long lived graceful restart. Если включена, BGP маршрутизатор сохранит свое состояние на более длительное время в случае отказа BGP-узла.\n\nВозможные значения:\n\n``true`` — опция включена,\n\n``false`` — опция выключена"
          }
        }
      },
      "dc_bgp_post_body": {
        "type": "object",
        "properties": {
          "dc_bgp": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_bgp_post_props"
              },
              {
                "$ref": "#/components/schemas/dc_bgp_rw_props"
              },
              {
                "$ref": "#/components/schemas/dc_api_nd_props"
              }
            ]
          }
        }
      },
      "dc_bgp_put_body": {
        "type": "object",
        "properties": {
          "dc_bgp": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_bgp_rw_props"
              },
              {
                "$ref": "#/components/schemas/dc_api_nd_props"
              }
            ]
          }
        }
      },
      "dc_bgp_full": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/dc_bgp_post_props"
          },
          {
            "$ref": "#/components/schemas/dc_bgp_rw_props"
          },
          {
            "$ref": "#/components/schemas/neutron_api_get_props"
          }
        ]
      },
      "dc_bgp_one_resp": {
        "type": "object",
        "properties": {
          "dc_bgp": {
            "$ref": "#/components/schemas/dc_bgp_full"
          }
        }
      },
      "dc_bgp_many_resp": {
        "type": "object",
        "properties": {
          "dc_bgps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dc_bgp_full"
            }
          }
        }
      },
      "dc_bgp_neighbor_add_paths": {
        "type": "string",
        "enum": [
          "off",
          "on",
          "tx",
          "rx"
        ],
        "example": "off",
        "description": "Режим работы соседа. Определяет возможность обмена всеми вариантами маршрутизации для каждого анонса.\n\nВозможные значения:\n\n``off`` — выключен;\n\n``on`` — включен в оба направления;\n\n``rx`` — включен только на прием;\n\n``tx`` — включен только на передачу"
      },
      "dc_bgp_neighbor_post_props": {
        "type": "object",
        "properties": {
          "dc_bgp_id": {
            "type": "string",
            "format": "uuid",
            "description": "Идентификатор BGP-маршрутизатора"
          },
          "remote_asn": {
            "type": "integer",
            "example": 12345,
            "description": "ASN удаленной сети"
          },
          "remote_ip": {
            "type": "string",
            "example": "192.168.1.3"
          }
        },
        "required": [
          "remote_asn",
          "dc_bgp_id",
          "remote_ip"
        ]
      },
      "dc_bgp_neighbor_rw_props": {
        "type": "object",
        "properties": {
          "force_ibgp_next_hop_self": {
            "type": "boolean",
            "example": false,
            "description": "Параметр определяет, включена ли опция Next Hop Self. Если включена, BGP-соседу передается IP-адрес интерфейса маршрутизатора, который передает анонс, в качестве промежуточного узла (Next Hop).\n\nВозможные значения:\n\n``true`` — опция включена,\n\n``false`` — опция выключена"
          },
          "add_paths": {
            "$ref": "#/components/schemas/dc_bgp_neighbor_add_paths"
          },
          "bfd_enabled": {
            "type": "boolean",
            "example": false,
            "description": "Параметр определяет, включена ли опция BFD. Это позволяет использовать контроль сессии через BFD (Bidirectional Forwarding Detection).\n\nВозможные значения:\n\n``true`` — опция включена,\n\n``false`` — опция выключена"
          },
          "filter_in": {
            "type": "string",
            "format": "uuid"
          },
          "filter_out": {
            "type": "string",
            "format": "uuid"
          },
          "enabled": {
            "type": "boolean",
            "example": true,
            "description": "Параметр определяет, включено ли BGP-соседство.\n\nВозможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          }
        }
      },
      "dc_bgp_neighbor_post_body": {
        "type": "object",
        "properties": {
          "dc_bgp_neighbor": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_bgp_neighbor_post_props"
              },
              {
                "$ref": "#/components/schemas/dc_bgp_neighbor_rw_props"
              },
              {
                "$ref": "#/components/schemas/dc_api_nd_props"
              }
            ]
          }
        }
      },
      "dc_bgp_neighbor_put_body": {
        "type": "object",
        "properties": {
          "dc_bgp_neighbor": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_bgp_neighbor_rw_props"
              },
              {
                "$ref": "#/components/schemas/dc_api_nd_props"
              }
            ]
          }
        }
      },
      "dc_bgp_neighbor_full": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/dc_bgp_neighbor_post_props"
          },
          {
            "$ref": "#/components/schemas/dc_bgp_neighbor_rw_props"
          },
          {
            "$ref": "#/components/schemas/neutron_api_get_props"
          }
        ]
      },
      "dc_bgp_neighbor_one_resp": {
        "type": "object",
        "properties": {
          "dc_bgp_neighbor": {
            "$ref": "#/components/schemas/dc_bgp_neighbor_full"
          }
        }
      },
      "dc_bgp_neighbor_many_resp": {
        "type": "object",
        "properties": {
          "dc_bgp_neighbors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dc_bgp_neighbor_full"
            }
          }
        }
      },
      "dc_bgp_static_announce_post_props": {
        "type": "object",
        "properties": {
          "dc_bgp_id": {
            "type": "string",
            "format": "uuid",
            "description": "Идентификатор BGP-маршрутизатора"
          },
          "network": {
            "type": "string",
            "example": "192.168.2.0/24",
            "description": "Адрес с маской сети, которая анонсирована BGP-соседу"
          },
          "gateway": {
            "type": "string",
            "example": "192.168.1.3",
            "description": "IP-адрес шлюза"
          }
        },
        "required": [
          "dc_bgp_id",
          "network",
          "gateway"
        ]
      },
      "dc_bgp_static_announce_rw_props": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "example": true,
            "description": "Параметр определяет, включен ли BGP-анонс.\n\nВозможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          }
        }
      },
      "dc_bgp_static_announce_post_body": {
        "type": "object",
        "properties": {
          "dc_bgp_static_announce": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_bgp_static_announce_post_props"
              },
              {
                "$ref": "#/components/schemas/dc_bgp_static_announce_rw_props"
              },
              {
                "$ref": "#/components/schemas/dc_api_nd_props"
              }
            ]
          }
        }
      },
      "dc_bgp_static_announce_put_body": {
        "type": "object",
        "properties": {
          "dc_bgp_static_announce": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_bgp_static_announce_rw_props"
              },
              {
                "$ref": "#/components/schemas/dc_api_nd_props"
              }
            ]
          }
        }
      },
      "dc_bgp_static_announce_full": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/dc_bgp_static_announce_post_props"
          },
          {
            "$ref": "#/components/schemas/dc_bgp_static_announce_rw_props"
          },
          {
            "$ref": "#/components/schemas/neutron_api_get_props"
          }
        ]
      },
      "dc_bgp_static_announce_one_resp": {
        "type": "object",
        "properties": {
          "dc_bgp_static_announce": {
            "$ref": "#/components/schemas/dc_bgp_static_announce_full"
          }
        }
      },
      "dc_bgp_static_announce_many_resp": {
        "type": "object",
        "properties": {
          "dc_bgp_static_announces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dc_bgp_static_announce_full"
            }
          }
        }
      },
      "dc_static_route_post_props": {
        "type": "object",
        "properties": {
          "dc_router_id": {
            "type": "string",
            "format": "uuid",
            "description": "Идентификатор маршрутизатора"
          },
          "network": {
            "type": "string",
            "example": "192.168.2.0/24",
            "description": "Адрес сети назначения с маской"
          },
          "gateway": {
            "type": "string",
            "example": "192.168.1.3",
            "description": "IP-адрес шлюза"
          }
        }
      },
      "dc_static_route_rw_props": {
        "type": "object",
        "properties": {
          "metric": {
            "type": "integer",
            "example": 1,
            "description": "Метрику. Определяет приоритет статистических маршрутов относительно друг друга в таблице маршрутизации"
          }
        }
      },
      "dc_static_route_post_body": {
        "type": "object",
        "properties": {
          "dc_static_route": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_static_route_post_props"
              },
              {
                "$ref": "#/components/schemas/dc_static_route_rw_props"
              },
              {
                "$ref": "#/components/schemas/dc_api_nd_props"
              }
            ]
          }
        }
      },
      "dc_static_route_put_body": {
        "type": "object",
        "properties": {
          "dc_static_route": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_static_route_rw_props"
              },
              {
                "$ref": "#/components/schemas/dc_api_nd_props"
              }
            ]
          }
        }
      },
      "dc_static_route_full": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/dc_static_route_post_props"
          },
          {
            "$ref": "#/components/schemas/dc_static_route_rw_props"
          },
          {
            "$ref": "#/components/schemas/neutron_api_get_props"
          }
        ]
      },
      "dc_static_route_one_resp": {
        "type": "object",
        "properties": {
          "dc_static_route": {
            "$ref": "#/components/schemas/dc_static_route_full"
          }
        }
      },
      "dc_static_route_many_resp": {
        "type": "object",
        "properties": {
          "dc_static_routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dc_static_route_full"
            }
          }
        }
      },
      "dc_vrrp_post_props": {
        "type": "object",
        "properties": {
          "network_id": {
            "type": "string",
            "format": "uuid",
            "description": "Идентификатор сети"
          },
          "subnet_id": {
            "type": "string",
            "format": "uuid",
            "description": "Идентификатор подсети"
          }
        },
        "required": [
          "network_id",
          "subnet_id"
        ]
      },
      "dc_vrrp_ro_props": {
        "type": "object",
        "properties": {
          "sdn": {
            "type": "string",
            "example": "sprut",
            "description": "Имя SDN"
          }
        }
      },
      "dc_vrrp_rw_props": {
        "type": "object",
        "properties": {
          "group_id": {
            "type": "integer",
            "example": 100,
            "description": "Номер группы"
          },
          "advert_interval": {
            "type": "integer",
            "example": 1,
            "description": "Интервал, с которым мастер отправляет пакеты объявления VRRP"
          },
          "enabled": {
            "type": "boolean",
            "example": true,
            "description": "Параметр определяет, включена ли VRRP-группа.\n\nВозможные значения:\n\n``true`` — включена,\n\n``false`` — выключена"
          }
        },
        "required": [
          "group_id"
        ]
      },
      "dc_vrrp_post_body": {
        "type": "object",
        "properties": {
          "dc_vrrp": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_vrrp_post_props"
              },
              {
                "$ref": "#/components/schemas/dc_vrrp_rw_props"
              },
              {
                "$ref": "#/components/schemas/dc_api_nd_props"
              }
            ]
          }
        }
      },
      "dc_vrrp_put_body": {
        "type": "object",
        "properties": {
          "dc_vrrp": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_vrrp_rw_props"
              },
              {
                "$ref": "#/components/schemas/dc_api_nd_props"
              }
            ]
          }
        }
      },
      "dc_vrrp_full": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/dc_vrrp_post_props"
          },
          {
            "$ref": "#/components/schemas/dc_vrrp_ro_props"
          },
          {
            "$ref": "#/components/schemas/dc_vrrp_rw_props"
          },
          {
            "$ref": "#/components/schemas/neutron_api_get_props"
          }
        ]
      },
      "dc_vrrp_one_resp": {
        "type": "object",
        "properties": {
          "dc_vrrp": {
            "$ref": "#/components/schemas/dc_vrrp_full"
          }
        }
      },
      "dc_vrrp_many_resp": {
        "type": "object",
        "properties": {
          "dc_vrrps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dc_vrrp_full"
            }
          }
        }
      },
      "dc_vrrp_interface_post_props": {
        "type": "object",
        "properties": {
          "dc_vrrp_id": {
            "type": "string",
            "format": "uuid",
            "description": "Идентификатор VRRP-группы"
          },
          "dc_interface_id": {
            "type": "string",
            "format": "uuid",
            "description": "Идентификатор интерфейса продвинутого маршрутизатора"
          }
        },
        "required": [
          "dc_vrrp_id",
          "dc_interface_id"
        ]
      },
      "dc_vrrp_interface_rw_props": {
        "type": "object",
        "properties": {
          "priority": {
            "type": "integer",
            "example": 100,
            "description": "Приоритет интерфейса во время выборов VRRP. Маршрутизатор становится Master, если имеет наивысший приоритет. VRRP приоритет задается в значениях от 1 до 254. Значение 0 зарезервировано для случаев, когда Master необходимо снять с себя ответственность за маршрутизацию. Значение 255 устанавливается маршрутизатору, владеющему виртуальным IP-адресом"
          },
          "preempt": {
            "type": "boolean",
            "example": true,
            "description": "Флаг мгновенного перехода в случае наличия игрока с более высоким приоритетом"
          },
          "master": {
            "type": "boolean",
            "example": false,
            "description": "Роль маршрутизатора в данной VRRP группе. VRRP Master — это маршрутизатор, который занимается пересылкой пакетов для данной виртуальной группы. VRRP Backup — это маршрутизатор, который ожидает пакет от Master. Если пакеты от Master перестают приходить, Backup пытается перейти в состояние Master"
          }
        }
      },
      "dc_vrrp_interface_post_body": {
        "type": "object",
        "properties": {
          "dc_vrrp_interface": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_vrrp_interface_post_props"
              },
              {
                "$ref": "#/components/schemas/dc_vrrp_interface_rw_props"
              },
              {
                "$ref": "#/components/schemas/dc_api_nd_props"
              }
            ]
          }
        }
      },
      "dc_vrrp_interface_put_body": {
        "type": "object",
        "properties": {
          "dc_vrrp_interface": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_vrrp_interface_rw_props"
              },
              {
                "$ref": "#/components/schemas/dc_api_nd_props"
              }
            ]
          }
        }
      },
      "dc_vrrp_interface_full": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/dc_vrrp_interface_post_props"
          },
          {
            "$ref": "#/components/schemas/dc_vrrp_interface_rw_props"
          },
          {
            "$ref": "#/components/schemas/neutron_api_get_props"
          }
        ]
      },
      "dc_vrrp_interface_one_resp": {
        "type": "object",
        "properties": {
          "dc_vrrp_interface": {
            "$ref": "#/components/schemas/dc_vrrp_interface_full"
          }
        }
      },
      "dc_vrrp_interface_many_resp": {
        "type": "object",
        "properties": {
          "dc_vrrp_interfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dc_vrrp_interface_full"
            }
          }
        }
      },
      "dc_conntrack_helper_post_props": {
        "type": "object",
        "properties": {
          "dc_router_id": {
            "type": "string",
            "format": "uuid",
            "description": "Идентификатор продвинутого маршрутизатора"
          }
        },
        "required": [
          "dc_router_id",
          "protocol",
          "port",
          "helper"
        ]
      },
      "dc_conntrack_helper_rw_props": {
        "type": "object",
        "properties": {
          "protocol": {
            "type": "string",
            "enum": [
              "tcp",
              "udp"
            ],
            "example": "tcp",
            "description": "Протокол передачи данных"
          },
          "port": {
            "type": "integer",
            "example": 80,
            "description": "Порт, на котором используется helper"
          },
          "helper": {
            "type": "string",
            "enum": [
              "ftp"
            ],
            "example": "ftp",
            "description": "Протокол, для которого требуется helper"
          }
        }
      },
      "dc_conntrack_helper_post_body": {
        "type": "object",
        "properties": {
          "dc_conntrack_helper": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_conntrack_helper_post_props"
              },
              {
                "$ref": "#/components/schemas/dc_conntrack_helper_rw_props"
              },
              {
                "$ref": "#/components/schemas/dc_api_nd_props"
              }
            ]
          }
        }
      },
      "dc_conntrack_helper_put_body": {
        "type": "object",
        "properties": {
          "dc_conntrack_helper": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_conntrack_helper_rw_props"
              },
              {
                "$ref": "#/components/schemas/dc_api_nd_props"
              }
            ]
          }
        }
      },
      "dc_conntrack_helper_full": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/dc_conntrack_helper_post_props"
          },
          {
            "$ref": "#/components/schemas/dc_conntrack_helper_rw_props"
          },
          {
            "$ref": "#/components/schemas/neutron_api_get_props"
          }
        ]
      },
      "dc_conntrack_helper_one_resp": {
        "type": "object",
        "properties": {
          "dc_conntrack_helper": {
            "$ref": "#/components/schemas/dc_conntrack_helper_full"
          }
        }
      },
      "dc_conntrack_helper_many_resp": {
        "type": "object",
        "properties": {
          "dc_conntrack_helpers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dc_conntrack_helper_full"
            }
          }
        }
      },
      "dc_ip_port_forwarding_post_props": {
        "type": "object",
        "properties": {
          "dc_interface_id": {
            "type": "string",
            "format": "uuid",
            "description": "Идентификатор интерфейса продвинутого маршрутизатора"
          }
        },
        "required": [
          "dc_interface_id",
          "to_destination"
        ]
      },
      "dc_ip_port_forwarding_rw_props": {
        "type": "object",
        "properties": {
          "protocol": {
            "$ref": "#/components/schemas/dc_ip_port_forwarding_rw_props_protocol"
          },
          "source": {
            "type": "string",
            "example": "10.0.0.0/8"
          },
          "destination": {
            "type": "string",
            "example": "172.17.20.30"
          },
          "port": {
            "type": "integer",
            "example": 80,
            "nullable": true,
            "description": "Порт, данные с которого передаются на указанный IP-адрес"
          },
          "to_destination": {
            "type": "string",
            "example": "192.168.0.10",
            "description": "IP-адрес, на который передаются данные с публичного IP-адреса"
          },
          "to_port": {
            "type": "integer",
            "example": 8080,
            "nullable": true,
            "description": "Порт, на который передаются данные"
          }
        }
      },
      "dc_ip_port_forwarding_post_body": {
        "type": "object",
        "properties": {
          "dc_ip_port_forwarding": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_ip_port_forwarding_post_props"
              },
              {
                "$ref": "#/components/schemas/dc_ip_port_forwarding_rw_props"
              },
              {
                "$ref": "#/components/schemas/dc_api_nd_props"
              }
            ]
          }
        }
      },
      "dc_ip_port_forwarding_put_body": {
        "type": "object",
        "properties": {
          "dc_ip_port_forwarding": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_ip_port_forwarding_rw_props"
              },
              {
                "$ref": "#/components/schemas/dc_api_nd_props"
              }
            ]
          }
        }
      },
      "dc_ip_port_forwarding_full": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/dc_ip_port_forwarding_post_props"
          },
          {
            "$ref": "#/components/schemas/dc_ip_port_forwarding_rw_props"
          },
          {
            "$ref": "#/components/schemas/neutron_api_get_props"
          }
        ]
      },
      "dc_ip_port_forwarding_one_resp": {
        "type": "object",
        "properties": {
          "dc_ip_port_forwarding": {
            "$ref": "#/components/schemas/dc_ip_port_forwarding_full"
          }
        }
      },
      "dc_ip_port_forwarding_many_resp": {
        "type": "object",
        "properties": {
          "dc_ip_port_forwardings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dc_ip_port_forwarding_full"
            }
          }
        }
      },
      "dc_ip_port_forwarding_rw_props_protocol": {
        "type": "string",
        "enum": [
          "tcp",
          "udp",
          "any"
        ],
        "example": "tcp",
        "description": "Протокол передачи данных. Возможные значения:\n\n``tcp`` — правило действует для указанного порта по протоколу TCP;\n\n``udp`` — правило действует для указанного порта по протоколу UDP;``any`` — правило действует для всех портов и протоколов"
      },
      "dc_vrrp_address_post_props": {
        "type": "object",
        "properties": {
          "dc_vrrp_id": {
            "type": "string",
            "format": "uuid",
            "description": "Идентификатор VRRP-группы"
          },
          "ip_address": {
            "type": "string",
            "example": "192.168.2.1",
            "description": "IP-адрес, который используется в качестве виртуального IP VRRP-группы. Поле можно оставить пустым, тогда сервис автоматически подберет свободный IP-адрес в подсети"
          }
        },
        "required": [
          "dc_vrrp_id"
        ]
      },
      "dc_vrrp_address_ro_props": {
        "type": "object",
        "properties": {
          "port_id": {
            "type": "string",
            "format": "uuid",
            "description": "Идентификатор порта"
          }
        }
      },
      "dc_vrrp_address_post_body": {
        "type": "object",
        "properties": {
          "dc_vrrp_address": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_vrrp_address_post_props"
              },
              {
                "$ref": "#/components/schemas/dc_api_nd_props"
              }
            ]
          }
        }
      },
      "dc_vrrp_address_put_body": {
        "type": "object",
        "properties": {
          "dc_vrrp_address": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_api_nd_props"
              }
            ]
          }
        }
      },
      "dc_vrrp_address_full": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/dc_vrrp_address_post_props"
          },
          {
            "$ref": "#/components/schemas/dc_vrrp_address_ro_props"
          },
          {
            "$ref": "#/components/schemas/neutron_api_get_props"
          }
        ]
      },
      "dc_vrrp_address_one_resp": {
        "type": "object",
        "properties": {
          "dc_vrrp_address": {
            "$ref": "#/components/schemas/dc_vrrp_address_full"
          }
        }
      },
      "dc_vrrp_address_many_resp": {
        "type": "object",
        "properties": {
          "dc_vrrp_addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dc_interface_full"
            }
          }
        }
      },
      "dc_api_common_props": {
        "type": "object",
        "properties": {
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта",
            "example": "842e5331461347b491fbd0d584c4b523"
          },
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта",
            "example": "842e5331461347b491fbd0d584c4b523"
          }
        }
      },
      "dc_api_nd_props": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Item name",
            "description": "Имя"
          },
          "description": {
            "type": "string",
            "example": "Item description",
            "description": "Описание"
          }
        }
      },
      "neutron_api_datetime_props": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Идентификатор"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-18T17:59:37",
            "description": "Дата и время создания ресурса. Формат: ``CCYY-MM-DDThh:mm:ss±hh:mm``. Значение ``±hh:mm`` указывает на часовой пояс (смещение от UTC)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-18T17:59:37",
            "description": "Дата и время обновления ресурса. Формат: ``CCYY-MM-DDThh:mm:ss±hh:mm``. Значение ``±hh:mm`` указывает на часовой пояс (смещение от UTC)"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at"
        ]
      },
      "neutron_api_get_props": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/dc_api_common_props"
          },
          {
            "$ref": "#/components/schemas/neutron_api_datetime_props"
          },
          {
            "$ref": "#/components/schemas/dc_api_nd_props"
          }
        ]
      },
      "telemetry_status": {
        "type": "string",
        "enum": [
          "PENDING",
          "ACTIVE",
          "DISABLED",
          "PARENT_DISABLED"
        ],
        "example": "ACTIVE"
      },
      "telemetry_empty_stats": {
        "type": "object",
        "nullable": true
      },
      "telemetry_dc_router_stats": {
        "type": "object",
        "properties": {
          "config_applied_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-18T17:59:37"
          }
        }
      },
      "telemetry_dc_neighbor_stats": {
        "type": "object",
        "properties": {
          "routes_imported": {
            "type": "integer",
            "example": 3
          },
          "routes_exported": {
            "type": "integer",
            "example": 5
          },
          "state": {
            "type": "string",
            "enum": [
              "Idle",
              "Connect",
              "Active",
              "OpenSent",
              "OpenConfirm",
              "Established",
              "Close",
              "Invalid"
            ]
          },
          "state_description": {
            "type": "string"
          },
          "last_change": {
            "type": "string",
            "example": "2023-05-18T17:59:37"
          }
        }
      },
      "telemetry_dc_interface_stats": {
        "type": "object",
        "properties": {
          "rx_bytes": {
            "type": "integer",
            "example": 1560173
          },
          "tx_bytes": {
            "type": "integer",
            "example": 6264539
          },
          "rx_packets": {
            "type": "integer",
            "example": 21302
          },
          "tx_packets": {
            "type": "integer",
            "example": 106711
          },
          "ip_addresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "192.168.210.129",
              "192.168.210.130"
            ]
          }
        }
      },
      "telemetry_base": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/telemetry_status"
          },
          "stats": {
            "$ref": "#/components/schemas/telemetry_empty_stats"
          }
        },
        "required": [
          "status"
        ]
      },
      "telemetry_dc_interface": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/dc_interface_full"
          },
          {
            "$ref": "#/components/schemas/telemetry_base"
          },
          {
            "type": "object",
            "properties": {
              "stats": {
                "$ref": "#/components/schemas/telemetry_dc_interface_stats"
              }
            }
          }
        ]
      },
      "telemetry_dc_static_route": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/dc_static_route_full"
          },
          {
            "$ref": "#/components/schemas/telemetry_base"
          }
        ]
      },
      "telemetry_dc_bgp_neighbor": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/dc_bgp_neighbor_full"
          },
          {
            "$ref": "#/components/schemas/telemetry_base"
          },
          {
            "type": "object",
            "properties": {
              "stats": {
                "$ref": "#/components/schemas/telemetry_dc_neighbor_stats"
              }
            }
          }
        ]
      },
      "telemetry_dc_bgp_static_announce": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/dc_bgp_static_announce_full"
          },
          {
            "$ref": "#/components/schemas/telemetry_base"
          }
        ]
      },
      "telemetry_dc_bgp": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/dc_bgp_full"
          },
          {
            "$ref": "#/components/schemas/telemetry_base"
          },
          {
            "type": "object",
            "properties": {
              "dc_bgp_neighbors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/telemetry_dc_bgp_neighbor"
                }
              },
              "dc_bgp_static_announces": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/telemetry_dc_bgp_static_announce"
                }
              }
            },
            "required": [
              "dc_bgp_neighbors",
              "dc_bgp_static_announces"
            ]
          }
        ]
      },
      "telemetry_dc_router": {
        "type": "object",
        "properties": {
          "dc_router": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/dc_router_full"
              },
              {
                "$ref": "#/components/schemas/telemetry_base"
              },
              {
                "type": "object",
                "properties": {
                  "stats": {
                    "$ref": "#/components/schemas/telemetry_dc_router_stats"
                  },
                  "dc_bgps": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/telemetry_dc_bgp"
                    }
                  },
                  "dc_interfaces": {
                    "type": "array",
                    "description": "Список интерфейсов маршрутизатора",
                    "items": {
                      "$ref": "#/components/schemas/telemetry_dc_interface"
                    }
                  },
                  "dc_static_routes": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/telemetry_dc_static_route"
                    }
                  }
                },
                "required": [
                  "dc_bgps",
                  "dc_interfaces",
                  "dc_static_routes"
                ]
              }
            ]
          },
          "timestamp": {
            "type": "string",
            "example": "2023-05-18T17:59:37",
            "description": "Время, когда была получена последняя информация от сервиса. Информация о состоянии сервиса обновляется с периодичностью до 5 минут"
          }
        },
        "required": [
          "dc_router",
          "timestamp"
        ]
      },
      "telemetry_dc_router_response": {
        "type": "object",
        "properties": {
          "telemetry": {
            "$ref": "#/components/schemas/telemetry_dc_router"
          }
        }
      },
      "IkePolicies": {
        "type": "object",
        "properties": {
          "ikepolicies": {
            "type": "array",
            "description": "Список IKE-политик",
            "items": {
              "$ref": "#/components/schemas/IkePolicy"
            }
          }
        }
      },
      "IkePolicy": {
        "type": "object",
        "required": [
          "name",
          "id",
          "description",
          "tenant_id",
          "project_id",
          "sdn"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор"
          },
          "description": {
            "type": "string",
            "description": "Описание"
          },
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "auth_algorithm": {
            "type": "string",
            "enum": [
              "sha1",
              "sha256"
            ],
            "default": "sha1",
            "description": "Алгоритм хеширования аутентификации"
          },
          "encryption_algorithm": {
            "type": "string",
            "description": "Алгоритм шифрования",
            "default": "aes-128",
            "enum": [
              "3des",
              "aes-128",
              "aes-192",
              "aes-256"
            ]
          },
          "pfs": {
            "type": "string",
            "description": "Группа Диффи-Хеллмана. Группы с большим номером используют большую длину ключа, что увеличивает стойкость",
            "default": "Group5",
            "enum": [
              "Group2",
              "Group5",
              "Group14"
            ]
          },
          "lifetime": {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "default": 3600,
                "description": "Время жизни ключа IKE (IKE SA). Рекомендуется устанавливать значение, превышающее аналогичное для ключей IPsec (CHILD SA ESP\\AH). Настройка может различаться между участниками IPsec-соединения"
              },
              "units": {
                "type": "string",
                "default": "seconds",
                "description": "Единицы измерения времени жизни ключа IKE"
              }
            }
          },
          "ike_version": {
            "type": "string",
            "default": "v1",
            "enum": [
              "v1",
              "v2"
            ],
            "description": "Версия IKE"
          },
          "created_at": {
            "type": "string",
            "example": "2015-08-27T09:49:58-05:00",
            "description": "Дата и время создания ресурса. Формат: ``CCYY-MM-DDThh:mm:ss±hh:mm``. Значение ``±hh:mm`` указывает на часовой пояс (смещение от UTC)"
          },
          "updated_at": {
            "type": "string",
            "example": "2015-08-27T09:49:58-05:00",
            "description": "Дата и время обновления ресурса. Формат: ``CCYY-MM-DDThh:mm:ss±hh:mm``. Значение ``±hh:mm`` указывает на часовой пояс (смещение от UTC)"
          },
          "sdn": {
            "type": "string",
            "enum": [
              "neutron",
              "sprut"
            ],
            "description": "SDN, в котором находится ресурс"
          }
        }
      },
      "IkePolicyCreate": {
        "type": "object",
        "required": [
          "name",
          "description",
          "tenant_id",
          "project_id"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя"
          },
          "description": {
            "type": "string",
            "description": "Описание"
          },
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "auth_algorithm": {
            "type": "string",
            "enum": [
              "sha1",
              "sha256"
            ],
            "default": "sha1",
            "example": "sha256",
            "description": "Алгоритм хеширования аутентификации"
          },
          "encryption_algorithm": {
            "type": "string",
            "description": "Алгоритм шифрования",
            "default": "aes-128",
            "example": "aes-256",
            "enum": [
              "3des",
              "aes-128",
              "aes-192",
              "aes-256"
            ]
          },
          "pfs": {
            "type": "string",
            "description": "Группа Диффи-Хеллмана. Группы с большим номером используют большую длину ключа, что увеличивает стойкость",
            "default": "Group5",
            "example": "Group14",
            "enum": [
              "Group2",
              "Group5",
              "Group14"
            ]
          },
          "lifetime": {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "default": 3600,
                "description": "Время жизни ключа IKE (IKE SA). Рекомендуется устанавливать значение, превышающее аналогичное для ключей IPsec (CHILD SA ESP\\AH). Настройка может различаться между участниками IPsec-соединения"
              },
              "units": {
                "type": "string",
                "default": "seconds",
                "description": "Единицы измерения времени жизни ключа IKE"
              }
            }
          },
          "ike_version": {
            "type": "string",
            "default": "v1",
            "example": "v2",
            "enum": [
              "v1",
              "v2"
            ],
            "description": "Версия IKE"
          }
        }
      },
      "IkePolicyUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя"
          },
          "description": {
            "type": "string",
            "description": "Описание"
          },
          "auth_algorithm": {
            "type": "string",
            "enum": [
              "sha1",
              "sha256"
            ],
            "default": "sha1",
            "example": "sha256",
            "description": "Алгоритм хеширования аутентификации"
          },
          "encryption_algorithm": {
            "type": "string",
            "description": "Алгоритм шифрования",
            "default": "aes-128",
            "example": "aes-256",
            "enum": [
              "3des",
              "aes-128",
              "aes-192",
              "aes-256"
            ]
          },
          "pfs": {
            "type": "string",
            "description": "Группа Диффи-Хеллмана. Группы с большим номером используют большую длину ключа, что увеличивает стойкость",
            "default": "Group5",
            "example": "Group14",
            "enum": [
              "Group2",
              "Group5",
              "Group14"
            ]
          },
          "lifetime": {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "default": 3600,
                "description": "Время жизни ключа IKE (IKE SA). Рекомендуется устанавливать значение, превышающее аналогичное для ключей IPsec (CHILD SA ESP\\AH). Настройка может различаться между участниками IPsec-соединения"
              },
              "units": {
                "type": "string",
                "default": "seconds",
                "description": "Единицы измерения времени жизни ключа IKE"
              }
            }
          },
          "ike_version": {
            "type": "string",
            "default": "v1",
            "example": "v2",
            "enum": [
              "v1",
              "v2"
            ],
            "description": "Версия IKE"
          }
        }
      },
      "IpsecPolicies": {
        "type": "object",
        "properties": {
          "ipsecpolicies": {
            "type": "array",
            "description": "Список IPsec-политик",
            "items": {
              "$ref": "#/components/schemas/IpsecPolicy"
            }
          }
        }
      },
      "IpsecPolicy": {
        "type": "object",
        "required": [
          "name",
          "id",
          "description",
          "tenant_id",
          "project_id",
          "sdn"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор"
          },
          "description": {
            "type": "string",
            "description": "Описание"
          },
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "auth_algorithm": {
            "type": "string",
            "enum": [
              "sha1",
              "sha256"
            ],
            "default": "sha1",
            "description": "Алгоритм хеширования аутентификации"
          },
          "encryption_algorithm": {
            "type": "string",
            "description": "Алгоритм шифрования",
            "default": "aes-128",
            "enum": [
              "3des",
              "aes-128",
              "aes-192",
              "aes-256"
            ]
          },
          "pfs": {
            "type": "string",
            "description": "Группа Диффи-Хеллмана. Группы с большим номером используют большую длину ключа, что увеличивает стойкость",
            "default": "Group5",
            "enum": [
              "Group2",
              "Group5",
              "Group14"
            ]
          },
          "lifetime": {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "default": 3600,
                "description": "Время жизни ключа IPsec (CHILD SA). Время, в течении которого ключ может использоваться для защиты соединения. Следует указывать значение, не превышающее время жизни ключа IKE"
              },
              "units": {
                "type": "string",
                "default": "seconds",
                "description": "Единицы измерения времени жизни ключа IPsec"
              }
            }
          },
          "encapsulation_mode": {
            "type": "string",
            "enum": [
              "tunnel",
              "transport"
            ],
            "default": "tunnel",
            "description": "Режим инкапсуляции"
          },
          "transform_protocol": {
            "type": "string",
            "enum": [
              "ESP",
              "AH",
              "AH-ESP"
            ],
            "default": "ESP",
            "description": "Алгоритм преобразования"
          },
          "created_at": {
            "type": "string",
            "example": "2015-08-27T09:49:58-05:00",
            "description": "Дата и время создания ресурса. Формат: ``CCYY-MM-DDThh:mm:ss±hh:mm``. Значение ``±hh:mm`` указывает на часовой пояс (смещение от UTC)"
          },
          "updated_at": {
            "type": "string",
            "example": "2015-08-27T09:49:58-05:00",
            "description": "Дата и время обновления ресурса. Формат: ``CCYY-MM-DDThh:mm:ss±hh:mm``. Значение ``±hh:mm`` указывает на часовой пояс (смещение от UTC)"
          },
          "sdn": {
            "type": "string",
            "enum": [
              "neutron",
              "sprut"
            ],
            "description": "SDN, в котором находится ресурс"
          }
        }
      },
      "IpsecPolicyCreate": {
        "type": "object",
        "required": [
          "name",
          "description",
          "tenant_id",
          "project_id"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя"
          },
          "description": {
            "type": "string",
            "description": "Описание"
          },
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "auth_algorithm": {
            "type": "string",
            "enum": [
              "sha1",
              "sha256"
            ],
            "default": "sha1",
            "example": "sha256",
            "description": "Алгоритм хеширования аутентификации"
          },
          "encryption_algorithm": {
            "type": "string",
            "description": "Алгоритм шифрования",
            "default": "aes-128",
            "example": "aes-256",
            "enum": [
              "3des",
              "aes-128",
              "aes-192",
              "aes-256"
            ]
          },
          "pfs": {
            "type": "string",
            "description": "Группа Диффи-Хеллмана. Группы с большим номером используют большую длину ключа, что увеличивает стойкость",
            "default": "Group5",
            "example": "Group14",
            "enum": [
              "Group2",
              "Group5",
              "Group14"
            ]
          },
          "lifetime": {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "default": 3600,
                "description": "Время жизни ключа IPsec (CHILD SA). Время, в течении которого ключ может использоваться для защиты соединения. Следует указывать значение, не превышающее время жизни ключа IKE"
              },
              "units": {
                "type": "string",
                "default": "seconds",
                "description": "Единицы измерения времени жизни ключа IPsec"
              }
            }
          },
          "encapsulation_mode": {
            "type": "string",
            "enum": [
              "tunnel",
              "transport"
            ],
            "default": "tunnel",
            "description": "Режим инкапсуляции"
          },
          "transform_protocol": {
            "type": "string",
            "enum": [
              "ESP",
              "AH",
              "AH-ESP"
            ],
            "default": "ESP",
            "description": "Алгоритм преобразования"
          }
        }
      },
      "IpsecPolicyUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя"
          },
          "description": {
            "type": "string",
            "description": "Описание"
          },
          "auth_algorithm": {
            "type": "string",
            "enum": [
              "sha1",
              "sha256"
            ],
            "default": "sha1",
            "example": "sha256",
            "description": "Алгоритм хеширования аутентификации"
          },
          "encryption_algorithm": {
            "type": "string",
            "description": "Алгоритм шифрования",
            "default": "aes-128",
            "example": "aes-256",
            "enum": [
              "3des",
              "aes-128",
              "aes-192",
              "aes-256"
            ]
          },
          "pfs": {
            "type": "string",
            "description": "Группа Диффи-Хеллмана. Группы с большим номером используют большую длину ключа, что увеличивает стойкость",
            "default": "Group5",
            "example": "Group14",
            "enum": [
              "Group2",
              "Group5",
              "Group14"
            ]
          },
          "lifetime": {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "default": 3600,
                "description": "Время жизни ключа IPsec (CHILD SA). Время, в течении которого ключ может использоваться для защиты соединения. Следует указывать значение, не превышающее время жизни ключа IKE"
              },
              "units": {
                "type": "string",
                "default": "seconds",
                "description": "Единицы измерения времени жизни ключа IPsec"
              }
            }
          },
          "encapsulation_mode": {
            "type": "string",
            "enum": [
              "tunnel",
              "transport"
            ],
            "default": "tunnel",
            "description": "Режим инкапсуляции"
          },
          "transform_protocol": {
            "type": "string",
            "enum": [
              "ESP",
              "AH",
              "AH-ESP"
            ],
            "default": "ESP",
            "description": "Алгоритм преобразования"
          }
        }
      },
      "VpnServices": {
        "type": "object",
        "properties": {
          "vpnservices": {
            "type": "array",
            "description": "Список VPN-сервисов",
            "items": {
              "$ref": "#/components/schemas/VpnService"
            }
          }
        }
      },
      "VpnService": {
        "type": "object",
        "required": [
          "router_id",
          "status",
          "name",
          "description",
          "id",
          "tenant_id",
          "project_id",
          "admin_state_up",
          "external_v4_ip",
          "created_at",
          "updated_at",
          "sdn"
        ],
        "properties": {
          "router_id": {
            "type": "string",
            "description": "Идентификатор маршрутизатора"
          },
          "status": {
            "type": "string",
            "description": "Статус VPN-сервиса",
            "enum": [
              "ACTIVE",
              "DOWN",
              "BUILD",
              "ERROR",
              "PENDING_CREATE",
              "PENDING_UPDATE",
              "PENDING_DELETE"
            ]
          },
          "name": {
            "type": "string",
            "description": "Имя"
          },
          "description": {
            "type": "string",
            "description": "Описание"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор VPN-сервиса"
          },
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "admin_state_up": {
            "type": "boolean",
            "description": "Административный статус ресурса. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          },
          "external_v4_ip": {
            "type": "string",
            "description": "Публичный IPv4-адрес, используемый для VPN-сервиса"
          },
          "subnet_id": {
            "type": "string",
            "description": "Идентификатор подсети. Если указана подсеть и не указан IP-адрес, то порту будет выделен доступный IP-адрес из этой подсети"
          },
          "created_at": {
            "type": "string",
            "example": "2015-08-27T09:49:58-05:00",
            "description": "Дата и время создания ресурса. Формат: ``CCYY-MM-DDThh:mm:ss±hh:mm``. Значение ``±hh:mm`` указывает на часовой пояс (смещение от UTC)"
          },
          "updated_at": {
            "type": "string",
            "example": "2015-08-27T09:49:58-05:00",
            "description": "Дата и время обновления ресурса. Формат: ``CCYY-MM-DDThh:mm:ss±hh:mm``. Значение ``±hh:mm`` указывает на часовой пояс (смещение от UTC)"
          },
          "sdn": {
            "type": "string",
            "enum": [
              "neutron",
              "sprut"
            ],
            "description": "SDN, в котором находится ресурс"
          }
        }
      },
      "VpnServiceCreate": {
        "type": "object",
        "required": [
          "router_id",
          "name",
          "description",
          "admin_state_up",
          "tenant_id",
          "project_id"
        ],
        "properties": {
          "router_id": {
            "type": "string",
            "description": "Идентификатор маршрутизатора"
          },
          "name": {
            "type": "string",
            "description": "Имя"
          },
          "description": {
            "type": "string",
            "description": "Описание"
          },
          "admin_state_up": {
            "type": "boolean",
            "description": "Административный статус ресурса. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          },
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "subnet_id": {
            "type": "string",
            "description": "Идентификатор подсети. Если указана подсеть и не указан IP-адрес, то порту будет выделен доступный IP-адрес из этой подсети"
          }
        }
      },
      "VpnServiceUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя"
          },
          "description": {
            "type": "string",
            "description": "Описание"
          },
          "admin_state_up": {
            "type": "boolean",
            "description": "Административный статус ресурса. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          }
        }
      },
      "EndpointGroups": {
        "type": "object",
        "properties": {
          "endpoint_groups": {
            "type": "array",
            "description": "Список endpoint-групп",
            "items": {
              "$ref": "#/components/schemas/EndpointGroup"
            }
          }
        }
      },
      "EndpointGroup": {
        "type": "object",
        "required": [
          "created_at",
          "updated_at",
          "name",
          "type",
          "description",
          "tenant_id",
          "project_id",
          "endpoints",
          "sdn"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор endpoint-группы"
          },
          "type": {
            "type": "string",
            "enum": [
              "cidr"
            ],
            "description": "Тип endpoint-группы"
          },
          "name": {
            "type": "string",
            "description": "Имя"
          },
          "description": {
            "type": "string",
            "description": "Описание"
          },
          "endpoints": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Список CIDR подсетей, которые доступны через VPN-туннель"
          },
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "created_at": {
            "type": "string",
            "example": "2015-08-27T09:49:58-05:00",
            "description": "Дата и время создания ресурса. Формат: ``CCYY-MM-DDThh:mm:ss±hh:mm``. Значение ``±hh:mm`` указывает на часовой пояс (смещение от UTC)"
          },
          "updated_at": {
            "type": "string",
            "example": "2015-08-27T09:49:58-05:00",
            "description": "Дата и время обновления ресурса. Формат: ``CCYY-MM-DDThh:mm:ss±hh:mm``. Значение ``±hh:mm`` указывает на часовой пояс (смещение от UTC)"
          },
          "sdn": {
            "type": "string",
            "enum": [
              "neutron",
              "sprut"
            ],
            "description": "SDN, в котором находится ресурс"
          }
        }
      },
      "EndpointGroupCreate": {
        "type": "object",
        "required": [
          "name",
          "type",
          "description",
          "tenant_id",
          "project_id",
          "endpoints"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "cidr"
            ],
            "description": "Тип endpoint-группы"
          },
          "name": {
            "type": "string",
            "description": "Имя"
          },
          "description": {
            "type": "string",
            "description": "Описание"
          },
          "endpoints": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Список CIDR подсетей, которые доступны через VPN-туннель"
          },
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          }
        }
      },
      "EndpointGroupUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя"
          },
          "description": {
            "type": "string",
            "description": "Описание"
          }
        }
      },
      "IpsecSiteConnections": {
        "type": "object",
        "properties": {
          "ipsec_site_connections": {
            "type": "array",
            "description": "Список VPN-туннелей",
            "items": {
              "$ref": "#/components/schemas/IpsecSiteConnection"
            }
          }
        }
      },
      "IpsecSiteConnection": {
        "type": "object",
        "required": [
          "ikepolicy_id",
          "vpnservice_id",
          "ipsecpolicy_id",
          "id",
          "peer_address",
          "status",
          "psk",
          "description",
          "name",
          "tenant_id",
          "project_id",
          "created_at",
          "updated_at",
          "admin_state_up",
          "mtu",
          "sdn"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор VPN-туннеля"
          },
          "ikepolicy_id": {
            "type": "string",
            "description": "Идентификатор IKE-политики"
          },
          "vpnservice_id": {
            "type": "string",
            "description": "Идентификатор VPN-сервиса"
          },
          "ipsecpolicy_id": {
            "type": "string",
            "description": "Идентификатор IPsec-политики"
          },
          "auth_mode": {
            "type": "string",
            "enum": [
              "psk"
            ],
            "default": "psk",
            "description": "Режим аутентификации"
          },
          "route_mode": {
            "type": "string",
            "enum": [
              "static"
            ],
            "default": "static",
            "description": "Режим маршрута"
          },
          "local_ep_group_id": {
            "type": "string",
            "description": "Идентификатор локальной endpoint-группы"
          },
          "peer_ep_group_id": {
            "type": "string",
            "description": "Идентификатор удаленной endpoint-группы"
          },
          "peer_address": {
            "type": "string",
            "description": "Публичный IPv4-адрес пира"
          },
          "peer_id": {
            "type": "string",
            "description": "Идентификатор маршрутизатора пира для аутентификации. Обычно совпадает с адресом пира ``peer_address``"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DOWN",
              "BUILD",
              "ERROR",
              "PENDING_CREATE",
              "PENDING_UPDATE",
              "PENDING_DELETE"
            ],
            "description": "Статус VPN-туннеля"
          },
          "psk": {
            "type": "string",
            "description": "Ключ совместного использования (PSK)"
          },
          "name": {
            "type": "string",
            "description": "Имя"
          },
          "description": {
            "type": "string",
            "description": "Описание"
          },
          "initiator": {
            "type": "string",
            "enum": [
              "bi-directional",
              "response-only"
            ],
            "default": "bi-directional",
            "description": "Поведение при установке IPsec-соединения.\n\nВозможные значения:\n\n``bi-directional`` — со стороны платформы VK Cloud производятся попытки установить соединение с удаленным пиром (remote peer);\n\n``response-only`` — платформа ожидает, что VPN-соединение будет инициировано удаленным пиром, и не пытается установить его самостоятельно"
          },
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "created_at": {
            "type": "string",
            "example": "2015-08-27T09:49:58-05:00",
            "description": "Дата и время создания ресурса. Формат: ``CCYY-MM-DDThh:mm:ss±hh:mm``. Значение ``±hh:mm`` указывает на часовой пояс (смещение от UTC)"
          },
          "updated_at": {
            "type": "string",
            "example": "2015-08-27T09:49:58-05:00",
            "description": "Дата и время обновления ресурса. Формат: ``CCYY-MM-DDThh:mm:ss±hh:mm``. Значение ``±hh:mm`` указывает на часовой пояс (смещение от UTC)"
          },
          "admin_state_up": {
            "type": "boolean",
            "description": "Административный статус ресурса. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          },
          "mtu": {
            "type": "integer",
            "description": "MTU"
          },
          "dpd": {
            "type": "object",
            "description": "Настройки обнаружения недоступности удаленного пира (Dead Peer Detection, DPD)",
            "properties": {
              "action": {
                "type": "string",
                "enum": [
                  "hold",
                  "clear",
                  "restart"
                ],
                "description": "Параметр определяет поведение платформы VK Cloud, если удаленный пир недоступен.\n\nВозможные значения:\n\n``hold`` — при обнаружении недоступности IPsec-соединение разрывается. Соединение может быть переустановлено только удаленным пиром.\n\n``clear`` —при обнаружении недоступности IPsec-соединение разрывается. Соединение не будет переустановлено, даже если удаленный пир будет пытаться это сделать.\n\n``restart`` —при обнаружении недоступности IPsec-соединение разрывается. Платформа VK Cloud будет пытаться переустановить соединение с удаленным пиром"
              },
              "interval": {
                "type": "integer",
                "description": "Интервал (в секундах), с которым отправляются проверочные DPD-сообщения"
              },
              "timeout": {
                "type": "integer",
                "description": "Время для обнаружения недоступности пира в секундах. Если по истечении этого времени не было получено ни одного проверочного DPD-сообщения от удаленного пира, он признается недоступным (dead)"
              }
            }
          },
          "sdn": {
            "type": "string",
            "enum": [
              "neutron",
              "sprut"
            ],
            "description": "SDN, в котором находится ресурс"
          }
        }
      },
      "IpsecSiteConnectionCreate": {
        "type": "object",
        "required": [
          "peer_address",
          "peer_id",
          "psk",
          "name",
          "description",
          "admin_state_up",
          "tenant_id",
          "project_id",
          "mtu"
        ],
        "properties": {
          "ikepolicy_id": {
            "type": "string",
            "description": "Идентификатор IKE-политики"
          },
          "vpnservice_id": {
            "type": "string",
            "description": "Идентификатор VPN-сервиса"
          },
          "ipsecpolicy_id": {
            "type": "string",
            "description": "Идентификатор IPsec-политики"
          },
          "auth_mode": {
            "type": "string",
            "enum": [
              "psk"
            ],
            "default": "psk",
            "description": "Режим аутентификации"
          },
          "route_mode": {
            "type": "string",
            "enum": [
              "static"
            ],
            "default": "static",
            "description": "Режим маршрута"
          },
          "local_ep_group_id": {
            "type": "string",
            "description": "Идентификатор локальной endpoint-группы"
          },
          "peer_ep_group_id": {
            "type": "string",
            "description": "Идентификатор удаленной endpoint-группы"
          },
          "peer_address": {
            "type": "string",
            "description": "Публичный IPv4-адрес пира"
          },
          "peer_id": {
            "type": "string",
            "description": "Идентификатор маршрутизатора пира для аутентификации. Обычно совпадает с адресом пира ``peer_address``"
          },
          "psk": {
            "type": "string",
            "description": "Ключ совместного использования (PSK)"
          },
          "name": {
            "type": "string",
            "description": "Имя"
          },
          "description": {
            "type": "string",
            "description": "Описание"
          },
          "initiator": {
            "type": "string",
            "enum": [
              "bi-directional",
              "response-only"
            ],
            "default": "bi-directional",
            "description": "Поведение при установке IPsec-соединения.\n\nВозможные значения:\n\n``bi-directional`` — со стороны платформы VK Cloud производятся попытки установить соединение с удаленным пиром (remote peer);\n\n``response-only`` — платформа ожидает, что VPN-соединение будет инициировано удаленным пиром, и не пытается установить его самостоятельно"
          },
          "tenant_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "project_id": {
            "type": "string",
            "description": "Значение параметра <a href='https://cloud.vk.com/docs/tools-for-using-services/api/rest-api/endpoints#poluchenie_project_id'>Project ID</a> для проекта"
          },
          "admin_state_up": {
            "type": "boolean",
            "description": "Административный статус ресурса. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          },
          "mtu": {
            "type": "integer",
            "description": "MTU"
          },
          "dpd": {
            "type": "object",
            "description": "Настройки обнаружения недоступности удаленного пира (Dead Peer Detection, DPD)",
            "properties": {
              "action": {
                "type": "string",
                "enum": [
                  "hold",
                  "clear",
                  "restart"
                ],
                "description": "Параметр определяет поведение платформы VK Cloud, если удаленный пир недоступен.\n\nВозможные значения:\n\n``hold`` — при обнаружении недоступности IPsec-соединение разрывается. Соединение может быть переустановлено только удаленным пиром.\n\n``clear`` —при обнаружении недоступности IPsec-соединение разрывается. Соединение не будет переустановлено, даже если удаленный пир будет пытаться это сделать.\n\n``restart`` —при обнаружении недоступности IPsec-соединение разрывается. Платформа VK Cloud будет пытаться переустановить соединение с удаленным пиром"
              },
              "interval": {
                "type": "integer",
                "description": "Интервал (в секундах), с которым отправляются проверочные DPD-сообщения"
              },
              "timeout": {
                "type": "integer",
                "description": "Время для обнаружения недоступности пира в секундах. Если по истечении этого времени не было получено ни одного проверочного DPD-сообщения от удаленного пира, он признается недоступным (dead)"
              }
            }
          }
        }
      },
      "IpsecSiteConnectionUpdate": {
        "type": "object",
        "properties": {
          "ikepolicy_id": {
            "type": "string",
            "description": "Идентификатор IKE-политики"
          },
          "vpnservice_id": {
            "type": "string",
            "description": "Идентификатор VPN-сервиса"
          },
          "ipsecpolicy_id": {
            "type": "string",
            "description": "Идентификатор IPsec-политики"
          },
          "auth_mode": {
            "type": "string",
            "enum": [
              "psk"
            ],
            "default": "psk",
            "description": "Режим аутентификации"
          },
          "route_mode": {
            "type": "string",
            "enum": [
              "static"
            ],
            "default": "static",
            "description": "Режим маршрута"
          },
          "local_ep_group_id": {
            "type": "string",
            "description": "Идентификатор локальной endpoint-группы"
          },
          "peer_ep_group_id": {
            "type": "string",
            "description": "Идентификатор удаленной endpoint-группы"
          },
          "peer_address": {
            "type": "string",
            "description": "Публичный IPv4-адрес пира"
          },
          "peer_id": {
            "type": "string",
            "description": "Идентификатор маршрутизатора пира для аутентификации. Обычно совпадает с адресом пира ``peer_address``"
          },
          "psk": {
            "type": "string",
            "description": "Ключ совместного использования (PSK)"
          },
          "name": {
            "type": "string",
            "description": "Имя"
          },
          "description": {
            "type": "string",
            "description": "Описание"
          },
          "initiator": {
            "type": "string",
            "enum": [
              "bi-directional",
              "response-only"
            ],
            "default": "bi-directional",
            "description": "Поведение при установке IPsec-соединения.\n\nВозможные значения:\n\n``bi-directional`` — со стороны платформы VK Cloud производятся попытки установить соединение с удаленным пиром (remote peer);\n\n``response-only`` — платформа ожидает, что VPN-соединение будет инициировано удаленным пиром, и не пытается установить его самостоятельно"
          },
          "admin_state_up": {
            "type": "boolean",
            "description": "Административный статус ресурса. Возможные значения:\n\n``true`` — включен,\n\n``false`` — выключен"
          },
          "mtu": {
            "type": "integer",
            "description": "MTU"
          },
          "dpd": {
            "type": "object",
            "description": "Настройки обнаружения недоступности удаленного пира (Dead Peer Detection, DPD)",
            "properties": {
              "action": {
                "type": "string",
                "enum": [
                  "hold",
                  "clear",
                  "restart"
                ],
                "description": "Параметр определяет поведение платформы VK Cloud, если удаленный пир недоступен.\n\nВозможные значения:\n\n``hold`` — при обнаружении недоступности IPsec-соединение разрывается. Соединение может быть переустановлено только удаленным пиром.\n\n``clear`` —при обнаружении недоступности IPsec-соединение разрывается. Соединение не будет переустановлено, даже если удаленный пир будет пытаться это сделать.\n\n``restart`` —при обнаружении недоступности IPsec-соединение разрывается. Платформа VK Cloud будет пытаться переустановить соединение с удаленным пиром"
              },
              "interval": {
                "type": "integer",
                "description": "Интервал (в секундах), с которым отправляются проверочные DPD-сообщения"
              },
              "timeout": {
                "type": "integer",
                "description": "Время для обнаружения недоступности пира в секундах. Если по истечении этого времени не было получено ни одного проверочного DPD-сообщения от удаленного пира, он признается недоступным (dead)"
              }
            }
          }
        }
      }
    }
  }
}