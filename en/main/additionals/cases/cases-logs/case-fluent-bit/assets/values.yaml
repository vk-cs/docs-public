kind: DaemonSet
replicaCount: 1

image:
  repository: fluent/fluent-bit
  # Overrides the image tag whose default is {{ .Chart.AppVersion }}
  tag: ""
  pullPolicy: Always

testFramework:
  image:
    repository: busybox
    pullPolicy: Always
    tag: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name:

rbac:
  create: true
  nodeAccess: true

podSecurityPolicy:
  create: false
  annotations: {}

podSecurityContext: {}
hostNetwork: false
dnsPolicy: ClusterFirst
dnsConfig: {}
hostAliases: []
securityContext: {}

service:
  type: ClusterIP
  port: 2020
  labels: {}
  annotations: {}

serviceMonitor:
  enabled: false

prometheusRule:
  enabled: false

dashboards:
  enabled: false
  labelKey: grafana_dashboard
  annotations: {}

livenessProbe:
  httpGet:
    path: /
    port: http

readinessProbe:
  httpGet:
    path: /api/v1/health
    port: http

resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

nodeSelector: {}
tolerations: []
affinity: {}
labels: {}
annotations: {}
podAnnotations: {}
podLabels: {}
priorityClassName: ""
env: []
envFrom: []
extraContainers: []
extraPorts: []
extraVolumes: []
extraVolumeMounts: []
updateStrategy: {}
existingConfigMap: ""

networkPolicy:
  enabled: false

luaScripts: {}

config:
  service: |
    [SERVICE]
        Daemon Off
        Flush 1
        Log_Level {{ .Values.logLevel }}
        Parsers_File parsers.conf
        Parsers_File custom_parsers.conf
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port {{ .Values.service.port }}
        Health_Check On

  inputs: |
    [INPUT]
        Name tail
        Path /var/log/containers/*.log
        multiline.parser docker, cri
        Tag kube.*
        Mem_Buf_Limit 5MB
        Skip_Long_Lines On

    [INPUT]
        Name systemd
        Tag host.*
        Path /run/log/journal
        Systemd_Filter _SYSTEMD_UNIT=kubelet.service
        Systemd_Filter _SYSTEMD_UNIT=crio.service
        Systemd_Filter _SYSTEMD_UNIT=docker.service
        Read_From_Tail On

  filters: |
    [FILTER]
        Name kubernetes
        Match kube.*
        Merge_Log On
        Keep_Log Off
        K8S-Logging.Parser On
        K8S-Logging.Exclude On

    [FILTER]
        Name parser
        Parser docker-daemon
        Match host.docker.service
        Key_Name MESSAGE
        Reserve_Data Off
        Preserve_Key Off

    [FILTER]
        Name parser
        Parser crio-daemon
        Match host.crio.service
        Key_Name MESSAGE
        Reserve_Data Off
        Preserve_Key Off

  outputs: |
    [OUTPUT]
        Name pgsql
        Match kube.*
        Host 5.188.141.44
        Port 5432
        User logger
        Password h22g0mnw]ps3x042
        Database runtime-613
        Table fluentbit_21_kube
        Timestamp_Key ts
        Logstash_Format On
        Retry_Limit False

    [OUTPUT]
        Name pgsql
        Match host.*
        Host 5.188.141.44
        Port 5432
        User logger
        Password h22g0mnw]ps3x042
        Database runtime-613
        Table fluentbit_21_host
        Timestamp_Key ts
        Logstash_Format On
        Logstash_Prefix node
        Retry_Limit False

  customParsers: |
    [PARSER]
        Name        crio-daemon
        Format      regex
        Regex       time="(?<time>[^ ].*Z)" level=(?<level>[^ ]*) msg="(?<msg>[^ ].*)" id=(?<id>[^ ]*) name=(?<name>[^ ]*)
        Time_Key    time
        Time_Format %Y-%m-%d %H:%M:%S.%L
        Time_Keep   On

  extraFiles: {}

volumeMounts:
  - name: config
    mountPath: /fluent-bit/etc/fluent-bit.conf
    subPath: fluent-bit.conf
  - name: config
    mountPath: /fluent-bit/etc/custom_parsers.conf
    subPath: custom_parsers.conf

daemonSetVolumes:
  - name: varlog
    hostPath:
      path: /var/log
  - name: varlibdockercontainers
    hostPath:
      path: /var/lib/docker/containers
  - name: etcmachineid
    hostPath:
      path: /etc/machine-id
      type: File
  - name: journald
    hostPath:
      path: /run/log/journal

daemonSetVolumeMounts:
  - name: varlog
    mountPath: /var/log
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true
  - name: etcmachineid
    mountPath: /etc/machine-id
    readOnly: true
  - name: journald
    mountPath: /run/log/journal
    readOnly: true

args: []
command: []
initContainers: []
logLevel: info
